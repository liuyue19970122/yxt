//index.js
//获取应用实例
var util = require('../../utils/util.js');
import * as echarts from '../../ec-canvas/echarts';
const app = getApp()
var list = []
var list1 = []
var timestamp = Date.parse(new Date())
function initChart(canvas, width, height) {
  const chart = echarts.init(canvas, null, {
    width: width,
    height: height
  });
  canvas.setChart(chart);

  var option = {
    color: ["#ca4f4b", "#88afff", "#ebde30"],
    legend: {
      itemHeight: 14,
      itemWidth: 14,
      selectedMode:false,
      data: [{
          name: '收入',
          icon: 'rect',
        },
        {
          name: '支出',
          icon: 'rect',
        },
        {
          name: '利润',
          icon: 'rect',
        }
      ],
      top: 0,
      left:'center',
      backgroundColor: '#fff',
      z: 100,
      textStyle: {
        fontSize: 14
      }
    },
    grid: {
      containLabel: true,
      left: 12,
      top: 40,
      bottom: 0,
      right: 20
    },
    tooltip: {
      show: true,
      trigger: 'none'
    },
    xAxis: {
      type: 'category',
      boundaryGap: false,
      data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
      axisLabel: {
        fontSize: 14,
      },
      rich: {},
    },
    yAxis: {
      x: 'center',
      type: 'value',
      splitLine: {
        lineStyle: {
          type: 'dashed',
        }
      },
      axisLabel: {
        fontSize: 14,
      },
      rich: {},
    },


    series: [{
      name: '收入',
      type: 'line',
      smooth: true,
      data: [18, 36, 65, 30, 78, 40, 33]
    }, {
      name: '支出',
      type: 'line',
      smooth: true,
      data: [12, 50, 51, 35, 70, 30, 20]
    }, {
      name: '利润',
      type: 'line',
      smooth: true,
      data: [10, 30, 31, 50, 40, 20, 10]
    }, ],
  };

  chart.setOption(option);
  return chart;
}
Page({
  data: {
    cWidth: '',
    cHeight: '',
    ec: {
      onInit: initChart
    },
    isGong: true,
    isMsg: true,
    motto: 'Hello World',
    userInfo: {},
    value: '',
    background: '#FE2200',
    hasUserInfo: false,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    range: '0',
    token: '',
    rangeArray: [{
      id: '1',
      // range: 'week',
      name: '周度'
    }, {
      id: '2',
      // range: 'month',
      name: '月度'
    }, {
      id: '2',
      // range: 'month',
      name: '季度'
    }, {
      id: '2',
      // range: 'month',
      name: '年度'
    }],
    menuList: [],
    warnList: [],
    orderList: [],
    startPoint:'',
    btnTop:750,
    windowHeight: '',
    windowWidth: '',
    isIpx:false,
    timeIndex:0,
    bannerList: [],
    totalData: {}
  },
  bindBuyMeal(){
    wx.navigateTo({
      url: '/pages/receipt/table-list/list',
    })
  },
  getBannerList(){
    var url = app.globalData.baseUrl + 'apiUser/banner/list'
    util.getRequestList(url, false, this.getBannerRes)
  },
  getBannerRes(res){
    this.setData({
      bannerList:res.data.content
    })
  },
  getTotalData(){
    var url = app.globalData.baseUrl +'apiMall/index/total'
    util.getRequestList(url,false,this.getTotalRes)
  },
  getTotalRes(res){
    if(res.data.code==200){
      var totalData=res.data.content
      totalData.monthProfit = util.getMoney(totalData.monthProfit).toLocaleString()
      totalData.monthSell = util.getMoney(totalData.monthSell).toLocaleString()
      totalData.todayBuy = util.getMoney(totalData.todayBuy).toLocaleString()
      totalData.todaySell = util.getMoney(totalData.todaySell).toLocaleString()
      this.setData({
        totalData
      })
    }
  },
  getWarnList: function() {
    var url = app.globalData.baseUrl + 'apiStock/stock/inst/warnList'
    util.getRequestList(url, false, this.listRes)
  },
  listRes(res) {
    this.setData({
      warnList: res.data.content
    })
  },
  getOrderList() {
    var url = app.globalData.baseUrl + 'apiMall/order/admin/list'
    var data = {
      status: 1
    }
    util.getRequestListData(url, data, false, this.orderlistRes)
  },
  orderlistRes(res) {
    this.setData({
      orderList: res.data.content
    })
  },
  goWarn: function() {
    wx.navigateTo({
      url: '../stock/stock-warn/list',
    })
  },
  goOrder() {
    wx.navigateTo({
      url: '/pages/mall/order-manager/order-manager?status=1',
    })
  },
  goHandleOrder: function() {
    wx.navigateTo({
      url: '/pages/mall/handle-order/handle-order',
    })
  },
  unlogin() {
    wx.stopLocationUpdate()
    wx.removeStorageSync("localToken")
    const data = {
      toOrgId: '',
      toUser: '',
      fromUser: this.data.token,
      msgType: 'close',
      content: ''
    };
    wx.sendSocketMessage({
      data: JSON.stringify(data),
      success: function(res) {
      },
      fail: function(res) {
      }
    })
    wx.closeSocket({});
    wx.redirectTo({
      url: '/pages/common/login/login',
    })
  },
  //事件处理函数
  bindViewTap: function() {
    wx.navigateTo({
      url: '../logs/logs'
    })
  },
  onSearch: function() {},
  onCancel: function() {},
  getMenuList() {
    var url = app.globalData.baseUrl + 'apiUser/menu/list?t=' + timestamp
    util.getRequestList(url, false, this.menuRes)
  },
  menuRes(res) {
    var menuList = res.data.content
    var list = []
    for (var item of menuList) {
      var jtem = {
        icon: item.logoUrl,
        isClose: true,
        title: item.menuName,
        id: item.keyId,
        nextMenu: JSON.parse(item.nextMenu)
      }
      list.push(jtem)
    }
    this.setData({
      menuList: list
    })
  },
  onShow() {
    this.getWarnList()
    this.getTotalData()
    var userInfo = wx.getStorageSync('localToken').userInfo
    wx.setNavigationBarTitle({
      title: userInfo.orgName,
    })
    if (userInfo.orgType == '1') {
      this.setData({
        isGong: true
      })
      this.getOrderList()
    } else {
      this.setData({
        isGong: false
      })
    }
    var token = wx.getStorageSync("localToken").token
    this.setData({
      token: token
    })
    wx.connectSocket({
      url: 'ws://192.168.124.101:8704/websocket/' + token
    })
    wx.onSocketClose(res => {
      console.log('WebSocket 已关闭！')
    })
    wx.onSocketError(res => {
      console.log(res);
      console.log('WebSocket连接打开失败，请检查！')
    })
  },
  // 刷新按钮开始移动
  buttonStart(e) {
    // 获取起始点
    console.log(e)
    this.setData({
      startPoint: e.touches[0]
    })
  },
  buttonMove(e){
    let { windowWidth, windowHeight, btnTop, startPoint, isIpx}=this.data
    // 获取结束点
    let endPoint = e.touches[e.touches.length - 1]
    // 计算移动距离相差
    let translateX = endPoint.clientX - startPoint.clientX
    let translateY = endPoint.clientY - startPoint.clientY
    // 初始化
    startPoint = endPoint
    // 赋值
    btnTop = btnTop + translateY
    // 根据屏幕匹配临界值
    let topSpace = 100
    if (isIpx) {
      topSpace = 134
    } else {
      topSpace = 100
    }
    if (btnTop + topSpace >= windowHeight) {
      btnTop = windowHeight - topSpace
    }
    // 顶部tab临界值
    if (btnTop <= 43) {
      btnTop = 43
    }
    this.setData({
      btnTop:btnTop,
      startPoint:startPoint
    })
  },
  selectTime(e){
    this.setData({
      timeIndex:e.currentTarget.dataset.index
    })
  },
  //实时上传位置///delivery/position
  //longitude,latitude
  liveUploadLocation(data){
    let url = app.globalData.baseUrl + 'apiMall/delivery/position'
    util.postRequestList(url, data, false, this.uploadLocationRes)
  },
  uploadLocationRes(res,type){},
  //toHandleOrder去开单
  toHandleOrder(){
    if(this.data.isGong){
      wx.navigateTo({
        url: '/pages/mall/handle-order/order-add/add?actType=add',
      })
    }else{
      wx.navigateTo({
        url: '/pages/receipt/table-list/list',
      })
    }
    // console.log(111)
   
  },
  onLoad: function(options) {
    let _this=this
    //实时监控位置
    if (wx.getStorageSync('localToken')){
      if (wx.canIUse('startLocationUpdateBackground')) {
        let oldTimes = new Date().getTime()
        let times = 1//次数
        wx.startLocationUpdateBackground({
          success(res) {
            wx.onLocationChange((res) => {
              let curTimes = new Date().getTime()
              let fi = Math.floor((curTimes - oldTimes) / 60000)
              if (fi === times) {
                times++
                let data = {
                  longitude: res.longitude,
                  latitude: res.latitude
                }
                _this.liveUploadLocation(data)
              }
            })
          },
          fail(err) {
            console.log(err)
          },
        })
      } else {
        wx.showModal({
          title: '提示',
          content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
        })
      }
    }
    this.getBannerList()
    this.getMenuList()
    if (options.path) {}
    wx.hideHomeButton({
      success: function(res) {
      }
    })
    var that=this
    wx.getSystemInfo({
      success: function(res) {
        var name = 'iPhone X'
        var isIpx=false
        if (res.model.indexOf(name) > -1) {
          isIpx = true
        }
        that.setData({
          windowHeight: res.windowHeight,
          windowWidth:res.windowWidth,
          isIpx: isIpx,
          btnTop: res.windowHeight*0.65
        })
      },
    })
    // util.setTitle()
    if (app.globalData.userInfo) {
      this.setData({
        userInfo: app.globalData.userInfo,
        hasUserInfo: true
      })
    } else if (this.data.canIUse) {
      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      // 所以此处加入 callback 以防止这种情况
      app.userInfoReadyCallback = res => {
        this.setData({
          userInfo: res.userInfo,
          hasUserInfo: true
        })
      }
    } else {
      // 在没有 open-type=getUserInfo 版本的兼容处理
      wx.getUserInfo({
        success: res => {
          app.globalData.userInfo = res.userInfo
          this.setData({
            userInfo: res.userInfo,
            hasUserInfo: true
          })
        }
      })
    }
  },
  getUserInfo: function(e) {
    app.globalData.userInfo = e.detail.userInfo
    this.setData({
      userInfo: e.detail.userInfo,
      hasUserInfo: true
    })
  },
})