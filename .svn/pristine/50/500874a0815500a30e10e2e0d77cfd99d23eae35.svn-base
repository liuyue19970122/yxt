// pages/pro_manage/pro_spec_edit/spec.js
import Notify from '../../../../miniprogram_npm/vant-weapp/notify/notify';
let util = require('../../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    switchChecked:true,
    proActType: 'add',
    specInfo:{
      goodsId: '',//商品ID
      attrName: '',//规格名称
      upCount:'',//上架数量
      attrPrice:'',//价格（两位小数）
      status: 1,//是否上下架(0下架/1上架)
      stockMulti: ''//与库存产品比值(两位小数)
    }
  },
  bindinputName(e){
    let name ='specInfo.attrName'
    this.setData({
      [name]:e.detail.value
    })
  },
  bindinputPrice(e) {
    let name = 'specInfo.attrPrice'
    this.setData({
      [name]: e.detail.value
    })
  },
  bindinputCount(e) {
    let name = 'specInfo.upCount'
    this.setData({
      [name]: e.detail.value
    })
  },
  bindinputMulti(e) {
    let name = 'specInfo.stockMulti'
    this.setData({
      [name]: e.detail.value
    })
  },
  //是否上架
  switchChange(e){
    let status ='specInfo.status'
    if(e.detail.value){
      this.setData({
        [status]:1
      })
    }else{
      this.setData({
        [status]: 0
      })
    }
  },
  //提交规格数据/store/inst/newGoodsAttr
  // 为某个商品增加规格
  submintAddSpecInfo(){
    let data=this.data.specInfo
    let proActType = this.data.proActType
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];   //当前页面
    let prevPage = pages[pages.length - 2];  //上一个页面
    if (proActType === 'add') {
      let obj = {}
      for (let key in this.data.specInfo) {
        if (key !== 'goodsId') {
          obj[key] = this.data.specInfo[key]
        }
      }
      let arr = prevPage.data.specList
      arr.push(obj)
      if(obj.status===1){
        let specSelArr = prevPage.data.specSelArr
        let len = list.length
        specSelArr.push(len)
      }
      prevPage.setData({
        specList: arr,
        specSelArr: specSelArr
      });
      wx.navigateBack({
        delta: -1
      })
    }
    if (proActType === 'edit') {
      this.editProAddSpec()
    }
  },
  //编辑商品增加规格//store/inst/newGoodsAttr
  editProAddSpec(){
     //Notify({ type: 'danger', message: '通知内容' });
    let url = app.globalData.baseUrl + 'apiMall/store/inst/newGoodsAttr'
    let data = this.data.specInfo
    console.log(data)
    let actType=false
    util.postRequestList(url, data, actType, this.addSpecInfoRes)
    // callBack(res, actType) //请求结果处理
  },
  addSpecInfoRes(res, actType){
    let result=res.data.content
    result.status=parseInt(result.status)
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];   //当前页面
    let prevPage = pages[pages.length - 2];  //上一个页面
    let list=prevPage.data.specList
    list.push(result)
    if(result.status===1){
      let specSelArr = prevPage.data.specSelArr
      let len = list.length
      specSelArr.push(len)
    }
    prevPage.setData({
      specList:list,
      specSelArr: specSelArr
    })
    wx.navigateBack({
      delta: -1
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let proActType = options.proActType
    console.log(options)
    this.setData({
      proActType: proActType
    })
    console.log(this.data.proActType)
    if (proActType === 'edit') {
      let goodsId = options.proId
      this.setData({
        ['specInfo.goodsId']: goodsId
      })
      console.log(this.data.specInfo)
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})