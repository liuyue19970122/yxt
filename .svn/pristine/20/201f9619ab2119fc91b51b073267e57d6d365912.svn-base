// pages/stock/stock-in/stock-in.js
var util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    cateList: [],
    searchName: '',
    goodList: [],
    isSearch: false,
    isSelect: false,
    selectCate: 0,
    index: -1,
    goodsName: '',
    isReadon: false,
    selectLocation: 0,
    goodsCount: '',
    goodsUnit: '',
    perMoney: '',
    totalMoney: '',
    description: '',
    locationList: [],
    isExit: false,
    goodsId: '',
    locationName: '',
    goods: {},
    unitList: [],
    selectUnit: 0,
    multiIndex: [0, 0],
    multiArr: [],
    goodsPic: '/utils/img/upload.png',
    warnCount: ''
  },
  upImage() {
    var that = this
    console.log("uploadImage")
    wx.chooseImage({
      count: 1,
      success: function(res) {
        var files = res.tempFilePaths
        wx.uploadFile({
          url: app.globalData.baseUrl + 'apiUser/file/upload',
          filePath: files[0],
          name: 'file',
          header: {
            Authorization: wx.getStorageSync('localToken').token
          },
          success(res) {
            that.setData({
              goodsPic: JSON.parse(res.data).content
            })
          }
        })
      },
    })
  },
  bindMultiPickerChange: function(e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      multiIndex: e.detail.value
    })
    var index = e.detail.value
    var that = this
    if (index[0] == 0) {
      this.setData({
        selectCate: -1
      })
    } else {
      this.setData({
        selectCate: that.data.cateList[index[0]].nextList[index[1]].keyId
      })
    }
    console.log(this.data.selectCate)
    // this.getGoodList()
  },
  bindMultiPickerColumnChange: function(e) {
    console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
    var data = {
      multiArr: this.data.multiArr,
      multiIndex: this.data.multiIndex
    };
    data.multiIndex[e.detail.column] = e.detail.value;
    if (e.detail.column == 0) {
      var nextArr = this.data.cateList[e.detail.value].nextList.map(item => {
        return item.cateName
      })
      var list = data.multiArr
      list.splice(1, 1)
      list.push(nextArr)
    }

    // console.log(data.multiIndex);
    this.setData(data);

  },
  changeCate: function(e) {
    this.setData({
      selectCate: e.detail.detail.value
    })
  },
  changeUnit: function(e) {
    console.log(e)
    this.setData({
      selectUnit: e.detail.detail.value
    })
  },
  changeLocation: function(e) {
    console.log(e)
    this.setData({
      selectLocation: e.detail.detail.value
    })
  },
  getCateList() {
    var url = app.globalData.baseUrl + 'apiStock/stock/cate/list'
    util.getRequestList(url, false, this.cateListRes)
  },
  closeSearch() {
    this.setData({
      isSearch: false,
    })
  },
  // touch(){
  //   return
  // },
  searchChange(e) {
    this.setData({
      isSearch: true,
      searchName: e.detail
    })
    if (e.detail == '') {
      this.setData({
        goodList: []
      })
      return
    }
    var url = app.globalData.baseUrl + 'apiStock/default/stock/list'
    var data = {
      name: e.detail
    }
    util.getRequestListData(url, data, false, this.searchRes)
  },
  searchRes(res) {
    this.setData({
      goodList: res.data.content,
    })
  },
  cateListRes(res) {
    var list = res.data.content
    for (var item of list) {
      item.nextList = JSON.parse(item.nextList)
    }
    this.setData({
      cateList: list,
      selectCate: list[0].nextList[0].keyId
    })
    var multiArr = this.data.cateList.map(item => {
      return item.cateName
    })
    console.log(multiArr)
    var list = []
    list.push(multiArr)
    var nextArr = this.data.cateList[0].nextList.map(item => {
      return item.cateName
    })
    console.log(nextArr)
    list.push(nextArr)
    this.setData({
      multiArr: list
    })
  },
  getGoodsName: function(e) {
    this.setData({
      goodsName: e.detail
    })
  },
  // getGoodsUnit: function(e) {
  //   this.setData({
  //     goodsUnit: e.detail
  //   })
  // },
  getTotalMoney: function(e) {
    let value = util.clearNoNum(e.detail)
    this.setData({
      totalMoney: value
    })
  },
  getPerMoney: function(e) {
    console.log(e)
    let value = util.clearNoNum(e.detail)
    console.log(value)
    console.log(this.data.goodsCount)
    var total = "" + value * this.data.goodsCount
    console.log(total)
    total = util.clearNoNum(total)
    var that = this
    this.setData({
      perMoney: value,
      totalMoney: total
    })
  },
  getGoodsCount: function(e) {
    let value = util.clearNoNum(e.detail)
    this.setData({
      goodsCount: value
    })
  },
  getWarnCount: function(e) {
    let value = util.clearNoNum(e.detail)
    this.setData({
      warnCount: value
    })
  },
  selectName(e) {
    this.setData({
      index: e.currentTarget.dataset.index,
      isSearch: false,
      isReadon: true,
    })
    var unit = this.data.goodList[this.data.index].goodsUnit
    var list = this.data.unitList
    for (var i in list) {
      if (list[i] == unit) {
        this.setData({
          selectUnit: i,
          isSelect: true,
        })
      }
    }
    this.setData({
      goodsName: this.data.goodList[this.data.index].goodsName,
      goodsCode: this.data.goodList[this.data.index].goodsCode,
      goodsPic: this.data.goodList[this.data.index].goodsPic,
      searchName: this.data.goodList[this.data.index].goodsName
    })
  },
  getDes(e) {
    console.log(e)
    this.setData({
      description: e.detail.value
    })
  },
  addGoods: function() {
    console.log(this.data.cateList[this.data.selectCate])
    console.log(this.data.selectCate)
    if (!this.data.isExit) {
      var url = app.globalData.baseUrl + 'apiStock/stock/inst/new'
      var data = {
        // cateId: this.data.cateList[this.data.selectCate].keyId,
        cateId: this.data.selectCate,
        locationId: this.data.locationList[this.data.selectLocation].keyId,
        goodsName: this.data.goodsName,
        goodsCode: this.data.goodsCode,
        goodsUnit: this.data.unitList[this.data.selectUnit],
        goodsCount: this.data.goodsCount,
        perMoney: this.data.perMoney,
        totalMoney: this.data.totalMoney,
        goodsPic: this.data.goodsPic,
        description: this.data.description,
        warnCount: this.data.warnCount > 0 ? this.data.warnCount : 0
      }
    } else {
      var url = app.globalData.baseUrl + 'apiStock/stock/inst/add'
      var data = {
        keyId: this.data.goods.keyId,
        goodsCount: this.data.goodsCount,
        perMoney: this.data.perMoney,
        totalMoney: this.data.totalMoney,
        description: this.data.description
      }
    }
    util.postRequestList(url, data, false, this.addRes)
  },
  addRes(res) {
    if (res.data.code == 200) {
      wx.showToast({
        icon: 'success',
        title: '入库成功',
      })
      this.setData({
        goodsName: '',
        goodsCode: '',
        goodsCount: '',
        goodsPic: '',
        isReadon: false,
        goodsUnit: '',
        description: '',
        perMoney: '',
        totalMoney: '',
        selectCate: -1,
        selectLocation: -1,
        warnCount: ''
      })
    }
  },
  getStockList() {
    var url = app.globalData.baseUrl + 'apiStock/stock/location/list'
    var data = {
      pageSize: 5000,
      pageNum: 1
    }
    util.getRequestListData(url, data, false, this.stockListRes)
  },
  stockListRes: function(res) {
    this.setData({
      locationList: res.data.content.list,
    })
  },
  getGoodsInfo() {
    var url = app.globalData.baseUrl + 'apiStock/stock/inst/info'
    var data = {
      keyId: this.data.goodsId
    }
    util.getRequestListData(url, data, false, this.infoRes)
  },
  infoRes(res) {
    if (res.data.code == 200) {
      var goods = res.data.content
      var list = this.data.cateList
      var that = this
      for (var i in list) {
        if (list[i].id == goods.cateId) {
          that.setData({
            selectCate: i
          })
        }
      }
      var list = this.data.locationList
      console.log(list)
      for (var i in list) {
        if (list[i].keyId == goods.locationId) {
          that.setData({
            selectLocation: i
          })
        }
      }
      var selectUnit = ''
      this.data.unitList.map((item, index) => {
        if (item == goods.goodsUnit) {
          selectUnit = index
          that.setData({
            selectUnit: selectUnit,
          })
        }
      })
      this.setData({
        goodsName: goods.goodsName,
        goodsPic: goods.goodsPic,
        goods: goods,
      })
      console.log(this.data.selectUnit)
      console.log(this.data.goodsName)
      console.log(this.data.goodsPic)
      console.log(this.data.selectLocation)
    }
  },
  getUnitList() {
    var url = app.globalData.baseUrl + 'apiStock/default/unit/list'
    util.getRequestListData(url, {}, false, this.unitListRes)
  },
  unitListRes(res) {
    this.setData({
      unitList: res.data.content
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    this.getCateList()
    this.getStockList()
    this.getUnitList()
    if (options.id) {
      this.setData({
        goodsId: options.id,
        isExit: true,
        isReadon: true
      })
      this.getGoodsInfo()
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  }
})