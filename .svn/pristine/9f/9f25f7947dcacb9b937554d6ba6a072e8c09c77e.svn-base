// pages/pro_manage/pro_list/list.js
let util = require('../../../utils/util.js');
const app = getApp()
let QQMapWX = require('../../../utils/qqmap-wx-jssdk.min.js');
let qqmapsdk;
Page({

  /**
   * 页面的初始数据
   */
  data: {
    locationInfo: {
      show: true,
      county: '定位中...',
    },
    sliderList:[],
    activeSlider:0,
    sliderId:'',
    tabList:[],
    activeTab: 0,
    tabId:'',
    tabShow: false,
    proList:[],
    cateProTotal: 0,//当前类总量
    compList: [
      { title: '销量', down: false, up: false, num: 0, type: 'sale' },
      { title: '价格', down: false, up: false, num: 0, type: 'price' }
    ],
    filterData: {
      cateId: '',
      goodsName: '',
      sortType: '', //价格：price,销量：count
      sortOrder: -1,//排序方向 1(>)/0(<)/-1
      pageNum: 1,
      pageSize: 10
    },
    scrollTop: 0,
    hasNextPage: true
  },
  //清除
  onClear(e) {
    if (searchValue) {
      let filterData = this.data.filterData
      filterData.goodsName = ''
      let tabShow = false
      this.setData({
        tabShow,
        filterData,
        scrollTop: 0,
        searchValue: ''
      })
      let actType = 'refresh'
      this.sortParmReset()
      this.getProInfoList(filterData, actType)
    } else {
      this.setData({
        searchValue: ''
      })
    }
  },
  //搜索功能
  onSearch(e) {
    let searchValue = e.detail
    let filterData = this.data.filterData
    filterData.goodsName = searchValue
    filterData.cateId = -1
    filterData.pageNum = 1
    filterData.pageSize = 10
    let sliderList = this.data.sliderList
    let sliderId = sliderList[0].keyId
    let tabList = JSON.parse(sliderList[0].nextList)
    let tabId = tabList[0].keyId
    let tabShow = false
    this.setData({
      tabList,
      tabShow,
      sliderId,
      tabId,
      filterData,
      searchValue,
      scrollTop: 0,
      activeTab: 0,
      activeSlider: 0,
    })
    this.sortParmReset()
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
  },
  //大类一级change事件
  onFirstCateChange(evt){
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderId=sliderList[index].keyId
    let tabList=JSON.parse(sliderList[index].nextList)
    if(!tabList.length){
      return
    }
    let tabId=tabList[0].keyId
    let filterData=this.data.filterData
    filterData.cateId=tabId
    filterData.goodsName = ''
    filterData.pageNum=1
    filterData.sortOrder=-1
    this.setData({
      tabList,
      sliderId,
      tabId,
      filterData,
      tabShow:false,
      activeTab:0,
      activeSlider:index,
      scrollTop:0
    })
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
    this.sortParmReset()
  },
  //大类二级change事件
  onSecondCateChange(evt){
    let index=evt.detail.index
    console.log(index)
    let tabList=this.data.tabList
    console.log(tabList)
    let tabId=tabList[index].keyId
    let filterData = this.data.filterData
    filterData.cateId = tabId
    filterData.goodsName = ''
    filterData.pageNum = 1
    filterData.sortOrder = -1
    this.setData({
      tabId,
      filterData,
      activeTab:index,
      scrollTop:0
    })
    let actType='refresh'
    this.getProInfoList(filterData,actType)
    this.sortParmReset()
  },
  handleClickTab(e) {
    let index = e.detail
    let tabList = this.data.tabList
    let tabId = tabList[index].keyId
    let filterData = this.data.filterData
    filterData.cateId = tabId
    filterData.goodsName = ''
    filterData.pageNum = 1
    this.setData({
      filterData,
      tabId,
      scrollTop: 0,
      activeTab: index
    })
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
  },
  bindCollapse(){
    let tabShow=!this.data.tabShow
    this.setData({
      tabShow
    })
  },
  seeProDetail(e){
    let index = e.detail
    let list = this.data.proList
    let id = list[index].keyId
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?id=' + id + '&actType=detail'
    })
  },
  //bindEdit 商品详情修改
  bindEdit(e){
    console.log(e)
    let id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/mall/pro-add/add?id='+id+'&actType=edit&sliderId='+this.data.sliderId+'&tabId='+this.data.tabId
    })
  },
  //更改商品上下架状态//store/inst/upOrDown
  //goodsId,attrId,status
  bindChangeStatus(e){
    let goodsId=e.target.dataset.id
    let status=e.target.dataset.status
    status===0?status=1:status===1?status=0:''
    let url = app.globalData.baseUrl + 'apiMall/store/inst/upOrDown'
    //postRequestList = function (url, data, actType, callBack)
    let data={
      goodsId: goodsId,
      attrId:'',
      status:status
    }
    util.postRequestList(url,data,actType,this.changeStatusRes)
  },
  changeStatusRes(res,actType){
    console.log(res)
  },
  //排序参数还原
  sortParmReset(){
    let compList= [
      { title: '销量', down: false, up: false, num: 0, type: 'sale' },
      { title: '价格', down: false, up: false, num: 0, type: 'price' }
    ]
    this.setData({
      compList
    })
  },
  //排序功能
  sortClick(e) {
    console.log(e)
    let type = e.currentTarget.dataset.type
    let curIndex = parseInt(e.currentTarget.dataset.index)
    let list = this.data.compList
    let num = list[curIndex].num + 1
    list[curIndex].num = num
    let proList = this.data.proList
    list.forEach((item, index) => {
      if (curIndex !== index) {
        item.down = false
        item.up = false
        item.num = 0
      }
    })
    if (num % 3 === 0) {
      list[curIndex].up = false
      list[curIndex].down = false
    
    }
    if (num % 3 === 1) {
      list[curIndex].up = false
      list[curIndex].down = true
      if (type === 'sale') {
        this.compSort(proList, 'sellCount', 'down')
      }
      if (type === 'price') {
        this.compSort(proList, 'sellPrice', 'down')
      }
    }
    if (num % 3 === 2) {
      list[curIndex].up = true
      list[curIndex].down = false
      if (type === 'sale') {
        this.compSort(proList, 'sellCount', 'up')
      }
      if (type === 'price') {
        this.compSort(proList, 'sellPrice', 'up')
      }
    }
    this.setData({
      compList: list
    })
  },
  //排序功能
  compSort(list, key, type) {
    console.log(list)
    if (type === 'up') {
      list.sort((a, b) => {
        return a[key] - b[key]
      })
    }
    if (type === 'down') {
      list.sort((a, b) => {
        return b[key] - a[key]
      })
    }
    this.setData({
      proList: list
    })
  },
  //获取分类列表/apiStock/stock/cate/list
  getCateList(){
    let url = app.globalData.baseUrl + 'apiStock/stock/cate/list'
    util.getRequestList(url, false, this.cateListRes)
  },
  cateListRes(res,type){
    let sliderList=res.data.content
    let cusAll = {
      cateLogo: null,
      cateName: "全部",
      defaultId: -1,
      keyId: -1,
      nextList: '[{"keyId":-1,"defaultId":-1,"cateName":"全部"}]'
    }
    sliderList.unshift(cusAll)
    let sliderId = sliderList[0].keyId
    let tabList=JSON.parse(sliderList[0].nextList)
    let tabId=tabList[0].keyId
    let filterData=this.data.filterData
    filterData.cateId=tabId
    this.setData({
      sliderList,
      sliderId,
      tabList,
      tabId,
      filterData
    })
    let actType = 'refresh'
    this.getProInfoList(filterData,actType)
  },
  //获取商品列表///store/inst/adminList
  getProInfoList(data, actType){
    wx.showLoading({
      title: '加载中...',
    })
    let url = app.globalData.baseUrl + 'apiMall/store/inst/adminList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    let result=res.data.content
    let list=result.list
    let total=result.total
    let hasNextPage=result.hasNextPage
    if(list.length){
      list.forEach(item => {
        item.cusOriPrice = util.getMoney(item.NormalPrice).toString()
        item.cusSalePrice = util.getMoney(item.sellPrice).toString()
      })
    }
    if(type==='refresh'){
      this.setData({
        proList: list,
        cateProTotal: total,
        hasNextPage: hasNextPage
      })
      console.log(this.data.hasNextPage)
    }
    if(type==='reachBottm'){
      let proList=this.data.proList
      list.forEach(item=>{
        proList.push(item)
      })
      this.setData({
        proList: proList,
        cateProTotal: total,
        hasNextPage: hasNextPage
      })
    }
    wx.hideLoading()
  },
  //到达底部
  bindscrolltolower(){
    console.log(this.data.hasNextPage)
    if(this.data.hasNextPage){
      let filterData=this.data.filterData
      filterData.pageNum+=1
      this.setData({
        filterData
      })
      let actType='reachBottom'
      this.getProInfoList(filterData, actType)
    }
  },
  //获取位置
  handleOpenSetting(res) {
    let auth = res.detail.authSetting['scope.userLocation']
    if (auth) {
      this.getLocal()
    } else {
      this.authFail('拒绝授权')
    }
  },
  getLocal: function () {
    let vm = this;
    util.getUserLocation.location().then(res => {
      let latitude = res.latitude
      let longitude = res.longitude
      qqmapsdk.reverseGeocoder({
        location: {
          // latitude: 30.33,
          // longitude: 106.93
          latitude: latitude,//106.93 
          longitude: longitude
        },
        success: function (res) {
          //console.log(JSON.stringify(res));
          let locationInfo = vm.data.locationInfo
          locationInfo.show = true
          locationInfo.county = res.result.ad_info.district
          vm.setData({
            locationInfo
          })
        },
        fail: function (res) {
          let locationInfo = vm.data.locationInfo
          locationInfo.show = false
          locationInfo.county = '定位中...'
          vm.setData({
            locationInfo
          })
          console.log(res);
        },
        complete: function (res) {
          // console.log(res);
        }
      });
    }).catch(err => {
      console.log(err)
    })
  },
  //拒绝授权或授权失败
  authFail(title) {
    wx.showToast({
      title: title,
      icon: 'none',
      mask: true
    })
    let locationInfo = this.data.locationInfo
    locationInfo.show = false
    locationInfo.county = '定位中...'
    this.setData({
      locationInfo
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let info = wx.getStorageSync('localToken')
    wx.setNavigationBarTitle({
      title: info.userInfo.orgName,
    })
    //console.log(userInfo)
    this.getCateList()//获取店铺分类及商品
    //获取定位信息
    qqmapsdk = new QQMapWX({
      key: 'APYBZ-TKQ6X-GAJ4A-7CDCW-JHK4K-LFB2Q'
    });
    let vm = this
    util.getUserLocation.getAuthSetting().then(res => {
      console.log(res)
      if (res.authSetting['scope.userLocation'] === true) {
        this.getLocal()
      }
      if (res.authSetting['scope.userLocation'] === false) {
        wx.showModal({
          title: '请求授权当前位置',
          content: '需要获取您的地理位置，请确认授权',
          success: function (res) {
            if (res.cancel) {
              vm.authFail('拒绝授权')
            } else if (res.confirm) {
              util.getUserLocation.againAuth().then(res => {
                vm.getLocal()
              })
            }
          }
        })
      }
      if (res.authSetting['scope.userLocation'] === undefined) {
        wx.authorize({
          scope: 'scope.userLocation',
          success: (res) => {
            vm.getLocal()
          },
          fail: (res) => {
            vm.authFail('拒绝授权')
            console.log('失败：', res)
          },
        })
      }
    }).catch(err => {
      console.log(err)
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})