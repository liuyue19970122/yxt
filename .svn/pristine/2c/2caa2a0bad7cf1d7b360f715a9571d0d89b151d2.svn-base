// pages/pro_manage/pro_list/list.js
let util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    searchValue:'',
    sliderList:[],
    activeSlider:0,
    sliderId:'',
    tabList:[],
    activeTab: 0,
    tabId:'',
    tabShow:false,
    proList:[],
    filterData:{
      orgId: '',
      cateId: -1,
      goodsName: '',
      sortType: '',//价格：price,销量：count
      sortOrder: -1,//排序方向 1(>)/0(<)/-1
      pageNum: 1,
      pageSize: 10
    },
    storeInfo:{},
    proSpecList:[],
    proSpecShow:false,
    checkAllList:[
      {value:1,checked:false,count:0}
    ],//控制全选按钮
    compList: [
      { title: '销量', down: false, up: false, num: 0, type: 'sale' },
      { title: '价格', down: false, up: false, num: 0, type: 'price' }
    ],
    cateProTotal: 0,
    cartProList: [],
    cartCheckValue:[],
    cartEmpty: true,
    showCart: false,
    hideCartImg:true,
    buyTotalCount:0,
    buyTotalMoney:0,
    buyFavMoney:0,
    isNewPage:true,
    hasGetCartData:false
  },
  //cartCheck阻止冒泡事件
  cartCheck(){},
  //bindCollect收藏///org/collect/add添加一个收藏
  //collectType//收藏类型(1:店铺,2:商品)//targetId
  ///org/collect/delete
  bindCollect(e){
    let _this=this
    let collect=e.currentTarget.dataset.collect
    if(collect){
      let data = { collectId: _this.data.storeInfo.collectId}
      wx.showModal({
        title: '提示',
        content: '是否取消收藏',
        success(res) {
          if (res.confirm) {
            _this.delCollect(data)
          } else if (res.cancel) {
            console.log('用户点击取消')
          }
        }
      })
    }else{
      let data = { collectType: 1, targetId: _this.data.storeInfo.orgId}
      _this.addCollect(data)
    }
  },
  addCollect(data){
    let url = app.globalData.baseUrl + 'apiUser/org/collect/add'
    util.postRequestList(url, data, false, this.addCollectRes)
  },
  addCollectRes(res,actType){
    if(res.data.code=='200'){
      let result=res.data.content
      let storeInfo = this.data.storeInfo
      storeInfo.isCollect = '1'
      storeInfo.collectId=result.keyId
      this.setData({ storeInfo })
      wx.showToast({
        title: '收藏成功',
      })
      let pages = getCurrentPages();
      let currPage = pages[pages.length - 1];   //当前页面
      let prevPage = pages[pages.length - 2];
      let storeList=prevPage.storeList
      storeList.forEach(item=>{
        if(item.keyId==storeInfo.orgId){
          item.isCollect='1'
          item.collectId=result.keyId
        }
      })
      prevPage.setData({storeList})
    }
  },
  delCollect(data){
    let url = app.globalData.baseUrl + 'apiUser/org/collect/delete'
    util.postRequestList(url, data, false, this.delCollectRes)
  },
  delCollectRes(res,actType){
    if (res.data.code == '200') {
      let storeInfo = this.data.storeInfo
      storeInfo.isCollect = '0'
      this.setData({ storeInfo })
    }
  },
  //清除
  onClear(e) {
    let filterData = this.data.filterData
    let searchValue = this.data.searchValue
    if (searchValue&&this.data.activeSlider===0) {
      filterData.cateId= -1
      filterData.goodsName= ''
      filterData.sortType= ''//价格：price,销量：count
      filterData.sortOrder= -1
      filterData.pageNum = 1
      let scrollTop = 0
      this.setData({
        filterData,
        scrollTop,
        tabShow: false,
        activeTab: 0,
        activeSlider: 0,
        searchValue:''
      })
      let actType = 'refresh'
      this.sortCompReset()
      this.getProInfoList(filterData, actType)
    } else {
      this.setData({
        searchValue: ''
      })
    }
  },
  //搜索功能
  onSearch(e) {
    let sliderList = this.data.sliderList
    let sliderId = sliderList[0].keyId
    let tabList = JSON.parse(sliderList[0].nextList)
    let tabId = tabList[0].keyId
    let searchValue = e.detail
    let filterData = this.data.filterData
    filterData.goodsName = searchValue
    filterData.cateId = -1
    filterData.sortType = ''//价格：price,销量：count
    filterData.sortOrder = -1
    filterData.pageNum = 1
    let scrollTop = 0
    this.setData({
      tabList,
      sliderId,
      tabId,
      searchValue,
      filterData,
      scrollTop,
      tabShow: false,
      activeTab:0,
      activeSlider:0
    })
    let actType = 'refresh'
    this.sortCompReset()
    this.getProInfoList(filterData, actType)
  },
  //大类一级change事件
  onFirstCateChange(evt){
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderId=sliderList[index].keyId
    let tabList=JSON.parse(sliderList[index].nextList)
    if(!tabList.length){
      return
    }
    let tabId=tabList[0].keyId
    let filter = this.data.filterData
    filter.orgId = this.data.storeInfo.orgId
    filter.cateId = tabId
    filter.goodsName = ''
    filter.sortType = ''//价格：price,销量：count
    filter.sortOrder = -1 //排序方向 1(>)/0(<)/-1
    filter.pageNum = 1
    this.setData({
      tabList,
      sliderId,
      tabId,
      tabShow:false,
      filterData: filter,
      activeTab: 0,
      scrollTop:0,
      activeSlider:index
    })
    let actType = 'refresh'
    this.sortCompReset()
    this.getProInfoList(filter, actType)
  },
  //大类二级change事件
  onSecondCateChange(evt){
    let index=evt.detail.index
    let tabList=this.data.tabList
    let tabId=tabList[index].keyId
    let filter = this.data.filterData
    filter.orgId = this.data.storeInfo.orgId
    filter.cateId = tabId
    filter.goodsName = ''
    filter.sortType = ''//价格：price,销量：countx
    filter.sortOrder = -1//价格：price,销量：count//排序方向 1(>)/0(<)/-1
    filter.pageNum = 1
    this.setData({
      tabId: tabId,
      activeTab: index,
      filterData:filter,
      scrollTop:0
    })
    let actType='refresh'
    this.sortCompReset()
    this.getProInfoList(filter,actType)
  },
  handleClickTab(e){
    let index=e.detail
    let tabList = this.data.tabList
    let tabId = tabList[index].keyId
    let filter = this.data.filterData
    filter.orgId = this.data.storeInfo.orgId
    filter.cateId = tabId
    filter.goodsName = ''
    filter.sortType = ''//价格：price,销量：countx
    filter.sortOrder = -1//价格：price,销量：count//排序方向 1(>)/0(<)/-1
    filter.pageNum = 1
    this.setData({
      tabId: tabId,
      activeTab: index,
      filterData: filter,
      scrollTop: 0
    })
    let actType = 'refresh'
    this.sortCompReset()
    this.getProInfoList(filter, actType)
  },
  bindTabCollapse(){
    let tabShow=!this.data.tabShow
    this.setData({tabShow})
  },
  seeProDetail(e){
    let index = parseInt(e.detail)
    let list=this.data.proList
    let id=list[index].keyId
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?id=' + id + '&actType=detail'
    })
  },
  //排序功能
  sortClick(e) {
    let type = e.currentTarget.dataset.type
    let curIndex = parseInt(e.currentTarget.dataset.index)
    let list = this.data.compList
    let num = list[curIndex].num + 1
    list[curIndex].num = num
    let filter = this.data.filterData
    filter.pageNum = 1
    let actType = 'refresh'
    list.forEach((item, index) => {
      if (curIndex !== index) {
        item.down = false
        item.up = false
        item.num = 0
      }
    })
    if (num % 3 === 0) {
      list[curIndex].up = false
      list[curIndex].down = false
      filter.sortType = ''//价格：price,销量：countx
      filter.sortOrder = -1//排序方向 1(>)/0(<)/-1
      this.getProInfoList(filter,actType)
    }
    if (num % 3 === 1) {
      list[curIndex].up = false
      list[curIndex].down = true
      filter.sortOrder = 1//排序方向 1(>)/0(<)/-1
      if (type === 'sale') {
        filter.sortType = 'count'//价格：price,销量：count
        this.getProInfoList(filter, actType)
      }
      if (type === 'price') {
        filter.sortType = 'price'//价格：price,销量：count
        this.getProInfoList(filter, actType)
      }
    }
    if (num % 3 === 2) {
      list[curIndex].up = true
      list[curIndex].down = false
      filter.sortOrder = 0//排序方向 1(>)/0(<)/-1
      if (type === 'sale') {
        filter.sortType = 'count'//价格：price,销量：count
        this.getProInfoList(filter, actType)
      }
      if (type === 'price') {
        filter.sortType = 'price'//价格：price,销量：count
        this.getProInfoList(filter, actType)
      }
    }
    this.setData({
      compList: list,
      filterData: filter,
      scrollTop:0
    })
  },
  //排序参数还原
  sortCompReset() {
    let compList = [
      { title: '销量', down: false, up: false, num: 0, type: 'sale' },
      { title: '价格', down: false, up: false, num: 0, type: 'price' }
    ]
    this.setData({
      compList
    })
  },
  //查看购物车详情
  bindShowCard(){
    if(this.data.cartEmpty){
      wx.showToast({
        title: '购物车空的',
        icon:'none'
      })
    }else{
      let show=!this.data.showCart
      let imgShow=!this.data.hideCartImg
      this.setData({
        showCart: show,
        hideCartImg: imgShow
      })
    }
  },
  closeCart(){
    this.setData({
      showCart: false,
      hideCartImg:true
    })
  },
  //购物车内商品操作
  bindCartAdd(e){
    let index = parseInt(e.target.dataset.index)
    let cpl=this.data.cartProList
    let obj=cpl[index]
    let count = obj.cusBuyCount
    let orgId=obj.orgId
    let goodsId=obj.goodsId
    obj.cusBuyCount=count+1
    let carId=obj.carId
    let buyCount = count + 1
    let chooseFlag = obj.cusChecked ? '1' : '0'
    this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
    
    // 商城数据变化
    let proList=this.data.proList
    proList.forEach((item,index)=>{
      if(item.goodsId===goodsId&&item.orgId===orgId){
        let attrList=JSON.parse(item.attrList)
        let attLen=attrList.length
        if(attLen===1){
          item.cusBuyCount=count
          item.cusOptShow=true
          item.cusAddShow=false
        }
      }
    })
    this.setData({proList})
    this.changeCartData(cpl)
  },
  //购物数据减少
  bindCartReduce(e){
    let index = parseInt(e.target.dataset.index)
    let cpl = this.data.cartProList
    let carId = cpl[index].carId
    let count = cpl[index].cusBuyCount
    let proList=this.data.proList
    let orgId=cpl[index].orgId
    let goodsId=cpl[index].goodsId
    if(count===1){
      proList.forEach((item,index)=>{
        if(item.goodsId===goodsId&&item.orgId===orgId){
          let attrList=JSON.parse(item.attrList)
          let attLen=attrList.length
          if(attLen===1){
            item.cusBuyCount=0
            item.cusOptShow=false
            item.cusAddShow=true
          }
        }
      })
      cpl.splice(index,1)
      this.delCartRecord({ carId })//data={carId}
    }else if(count>1){
      proList.forEach((item,index)=>{
        if(item.goodsId===goodsId&&item.orgId===orgId){
          let attrList=JSON.parse(item.attrList)
          let attLen=attrList.length
          if(attLen===1){
            item.cusBuyCount=count-1
          }
        }
      })
      cpl[index].cusBuyCount = count - 1
      let buyCount = count - 1
      let chooseFlag = cpl[index].cusChecked?'1':'0'
      this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
    }
    this.setData({proList})
    this.changeCartData(cpl)
  },
  //购物操作展示某个商品规格
  bindBuy(e) {
    let index =parseInt(e.target.dataset.index)
    let list=this.data.proList
    let proSpecList = JSON.parse(list[index].attrList) 
    let alCart = this.data.cartProList
    proSpecList.forEach(item => {
      alCart.forEach(value => {
        if (item.orgId === value.orgId && item.goodsId === value.goodsId && item.keyId === value.attrId) {
          item.cusBuyCount = value.cusBuyCount
          item.carId=value.carId
        }
      })
    })
    this.setData({
      proSpecShow: true,
      proSpecList: proSpecList
    })
  },
  //购买数量减
  bindCountReduce(e){
    let index = parseInt(e.target.dataset.index) 
    let list=this.data.proSpecList
    let count=list[index].cusBuyCount
    let orgId=list[index].orgId
    let attrId=list[index].keyId
    let cartProList=this.data.cartProList
    count--
    list[index].cusBuyCount = count>0?count:0
    if(count===0){
      let carId=0
      for (let i = 0; i < cartProList.length; i++) {
        let curObj = cartProList[i]
        if (curObj.orgId === orgId && curObj.attrId === attrId) {
          console.log(curObj)
          carId = curObj.carId
          cartProList.splice(i,1)
        }
      }
      this.delCartRecord({carId})
    }
    if(count>0){
      for (let i = 0; i < cartProList.length; i++) {
        let curObj = cartProList[i]
        if (curObj.orgId === orgId && curObj.attrId === attrId) {
          curObj.cusBuyCount = count
          let carId = curObj.carId
          let buyCount = count
          let chooseFlag = curObj.cusChecked ? '1' : '0'
          this.updateCartRecord({ carId, buyCount, chooseFlag })
        }
      }
    }
    this.changeCartData(cartProList)
    this.setData({
      proSpecList: list
    })
  },
  //购买数量加
  bindCountAdd(e){
    let index = parseInt(e.target.dataset.index)
    let list = this.data.proSpecList
    let curObj = list[index]
    let count = curObj.cusBuyCount
    let orgId = curObj.orgId
    let goodsId = curObj.goodsId
    let attrId = curObj.keyId
    let cartProList = this.data.cartProList
    console.log(count)
    if (count===0) {
      count++
      curObj.cusChecked = true
      curObj.cusBuyCount=count
      console.log(curObj)
      let data = {
        orgId: curObj.orgId,
        goodsId: curObj.goodsId,
        attrId: curObj.keyId,
        buyCount: count,
        chooseFlag: '1'
      }
      //orgId,goodsId,attrId,buyCount,chooseFlag
      this.addCartRecord(data)
      console.log(1111)
    }else{
      console.log(curObj)
      count++
      curObj.cusBuyCount = count
      for (let i = 0; i < cartProList.length; i++) {
        let cartObj = cartProList[i]
        if (cartObj.orgId === orgId && cartObj.attrId === attrId) {
          cartObj.cusBuyCount = count
          cartObj.cusChecked=true
          let carId = cartObj.carId
          let buyCount = cartObj.cusBuyCount
          let chooseFlag = cartObj.cusChecked ? '1' : '0'
          this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
          console.log(222)
          this.changeCartData(cartProList)
        }
      }
    }
    this.setData({
      proSpecList: list
    })
  },
  //商品选择++
  bindProAdd(e){
    let index=e.currentTarget.dataset.index
    let proList=this.data.proList
    let count=proList[index].cusBuyCount
    let goodsId=proList[index].goodsId
    let cpl=this.data.cartProList
    proList[index].cusBuyCount=count+1
    console.log(count)
    if(count===0){
      proList[index].cusOptShow=true
      proList[index].cusAddShow=false
      //orgId,goodsId,attrId,buyCount,chooseFlag
      let attrList=JSON.parse(proList[index].attrList)
      let atObj =attrList[0]
      let data={
        orgId:atObj.orgId, 
        goodsId: atObj.goodsId, 
        attrId:atObj.keyId, 
        buyCount:1, 
        chooseFlag:'1'
      }
      this.addCartRecord(data)
    }else{
      cpl.forEach((item,index)=>{
        if(item.goodsId===goodsId){
          item.cusBuyCount+=1
          let carId = item.carId
          let buyCount = item.cusBuyCount
          let chooseFlag = item.cusChecked ? '1' : '0'
          this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,
        }
      })
      this.changeCartData(cpl)
    }
    this.setData({proList})
  },
  //商品选择--
  bindProReduce(e){
    let index=e.currentTarget.dataset.index
    let proList=this.data.proList
    let count=proList[index].cusBuyCount
    let goodsId=proList[index].goodsId
    count--
    proList[index].cusBuyCount=count
    let cpl=this.data.cartProList
    if(count===0){
      proList[index].cusAddShow=true
      proList[index].cusOptShow=false
      cpl.forEach((item,index)=>{
        if(item.goodsId===goodsId){
          let carId=item.carId
          cpl.splice(index,1)
          this.delCartRecord({ carId })//data={carId}
        }
      })
    }else{
      cpl.forEach((item,index)=>{
        if(item.goodsId===goodsId){
          item.cusBuyCount=count
          let carId = item.carId
          let buyCount = item.cusBuyCount
          let chooseFlag = item.cusChecked ? '1' : '0'
          this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
        }
      })
    }
    this.changeCartData(cpl)
    this.setData({proList})
  },
  /**
   * 设置商品数据初始属性设置用于界面显示
   * @param  pl 商品数据 Array
  */
  initProList(pl){
    let orgId = parseInt(this.data.storeInfo.orgId)
    pl.forEach(item => {
      item.orgId = orgId
      item.orgName = this.data.storeInfo.orgName
      let imgSrc = item.goodsPic
      let goodsId = item.keyId
      let goodsName = item.goodsName
      item.cusBuyCount=0
      item.goodsId=item.keyId
      let attrList = JSON.parse(item.attrList)
      item.cusOptShow=false
      //cusOptShow,cusAddShow,cusSelShow
      if(attrList.length>1){
        item.cusSelShow=true
        item.cusAddShow=false
      }else{
        item.cusSelShow=false
        item.cusAddShow=true
      }
      attrList.sort((a, b) => {
        return a.attrPrice - b.attrPrice
      })
      attrList.forEach(item => {
        item.cusBuyCount = 0
        item.goodsPic = imgSrc
        item.orgId = orgId
        item.orgName = this.data.storeInfo.orgName
        item.goodsId = goodsId
        item.goodsName = goodsName
        item.cusSalePrice = util.getMoney(item.attrPrice).toString()
        item.cusOriPrice = util.getMoney(item.attrNormalPrice).toString()
        item.cusChecked = false
      })
      item.attrList = JSON.stringify(attrList) 
      item.cusSalePrice = util.getMoney(attrList[0].attrPrice)
      item.cusOriPrice = util.getMoney(attrList[0].attrNormalPrice)
      item.cusSalePriceFen = attrList[0].attrPrice
      item.cusOriPriceFen = attrList[0].attrNormalPrice
    })
    return pl
  },
  /**
   * 设置商品数据和购物车数据对比属性设置用于界面显示
   * @param cpl 购物车数据 Array
   * @param  pl 商品数据 Array
   */
  proDataCompare(cpl,pl){
    console.log(cpl)
    console.log(pl)
    if(cpl.length){
      let clen=cpl.length
      let plen=pl.length
      console.log(clen)
      console.log(plen)
      for(let i=0;i<clen;i++){
        for(let j=0;j<plen;j++){
          if(cpl[i].goodsId===pl[j].goodsId){
            console.log(cpl[i].goodsId) 
            let attLen=JSON.parse(pl[j].attrList).length
            let buyCount=cpl[i].buyCount
            //cusOptShow,cusAddShow,cusSelShow
            console.log(attLen)
            if(attLen===1){
              console.log(pl[j])
              pl[j].cusBuyCount=buyCount
              pl[j].cusOptShow=true
              pl[j].cusAddShow=false
            }
            break;
          }
        }
      }
    }
    console.log(pl)
    this.setData({
      proList:pl
    })
  },
  //购物车数据更改
  changeCartData(cartProList){
    let cpl = cartProList.length
    if(cpl){
      let buyTotalCount = 0
      let buyTotalMoney = 0
      let buyFavMoney = 0
      let oriPrice = 0
      let cartCheckValue = []
      let checkAllList=this.data.checkAllList
      cartProList.forEach((item,index) => {
        if (item.cusChecked){
          cartCheckValue.push(index.toString())
          buyTotalCount += item.cusBuyCount
          buyTotalMoney += item.attrPrice * item.cusBuyCount
          oriPrice += item.attrNormalPrice * item.cusBuyCount
        }
      })
      checkAllList[0].checked = cartCheckValue.length ===cpl?true:false
      buyFavMoney = oriPrice - buyTotalMoney
      buyTotalMoney = util.getMoney(buyTotalMoney).toString()
      buyFavMoney = util.getMoney(buyFavMoney).toString()
      let hideCartImg = this.data.showCart?false:true
      this.setData({
        cartProList,
        buyTotalCount,
        buyFavMoney,
        buyTotalMoney,
        cartCheckValue,
        checkAllList,
        hideCartImg,
        cartEmpty: false
      })
      console.log(cartProList)
      //商品控制属性设置
    }else{
      this.setData({
        cartEmpty:true,
        hideCartImg:true,
        showCart: false
      })
    }
  },
  //bindSpecChoice选取某个商品规格数据
  bindSpecChoice(e){
    let index=parseInt(e.detail.value)
    let list=this.data.proSpecList
    let obj=list[index]
    let orgId=obj.orgId
    let cartList=this.data.cartProList
    
    cartList.push(obj)
    this.setData({
      cartProList: cartList
    })
  },
  //购物车全选
  cartCheckAll(e){
    let len = e.detail.value.length
    let list = this.data.cartProList
    list.forEach(item => {
      item.cusChecked = len ? true : false
      let carId = item.carId
      let buyCount = item.cusBuyCount
      let chooseFlag = item.cusChecked ? '1' : '0'
      this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
    })
    this.changeCartData(list)
  },
  //购物车选择更改
  cartCheckboxChange(e){
    let curArr = e.detail.value
    let prevArr=this.data.cartCheckValue
    let difArr=this.getArrDifference(curArr,prevArr)
    let index=parseInt(difArr[0])
    let list = this.data.cartProList
    let obj = list[index]
    obj.cusChecked = !obj.cusChecked
    let carId = obj.carId
    let buyCount = obj.cusBuyCount
    let chooseFlag = obj.cusChecked ? '1' : '0'
    this.updateCartRecord({ carId, buyCount, chooseFlag })//carId,buyCount,chooseFlag
    
    this.changeCartData(list)
  },
  //获取两个数组中不中的值
  getArrDifference(arr1, arr2) {
    return arr1.concat(arr2).filter(function (v, i, arr) {
      return arr.indexOf(v) === arr.lastIndexOf(v);
    });
  },
  //清空购物车
  bindClearCart(){
    let that=this
    let list=this.data.cartProList
    wx.showModal({
      title: '提示',
      content: '是否清空购物车',
      success(res) {
        if (res.confirm) {
          that.setData({
            cartProList:[],
            showCart:false,
            cartEmpty:true,
            hideCartImg:true,
          })
          list.forEach(item=>{
            that.delCartRecord({carId:item.carId})
          })
        } else if (res.cancel) {
          console.log('用户点击取消')
        }
      }
    })
  },
  //关闭某个商品规格详情
  closeProSpec(){
    this.setData({
      proSpecShow: false
    })
  },
  //去订单提交界面bindToSubmit
  bindToSubmit(){
    if(this.data.cartEmpty){
      wx.showToast({
        title: '购物车空的',
        icon:'none'
      })
    }else if(this.data.buyTotalCount===0){
      wx.showToast({
        title: '请选择商品',
        icon: 'none'
      })
    }else{
      wx.navigateTo({
        url: '/pages/mall/mall-suborder/order',
      })
    }
  },
  //获取某个商家的分类列表/store/cate/showList
  getCateList(id){
    let data={
      orgId:id
    }
    let url = app.globalData.baseUrl + 'apiMall/store/cate/showList'
    util.getRequestListData(url,data, false, this.cateListRes)
  },
  cateListRes(res,type){
    let sliderList=res.data.content
    let allObj = {
      cateLogo: null,
      cateName: "全部",
      defaultId: -1,
      keyId: -1,
      nextList: '[{"keyId":-1,"defaultId":-1,"cateName":"全部"}]'
    }
    sliderList.unshift(allObj)
    let tabList = JSON.parse(sliderList[0].nextList)
    let cateId=tabList[0].keyId
    let filter = this.data.filterData
    filter.orgId = this.data.storeInfo.orgId
    filter.cateId= cateId
    this.setData({
      sliderList,
      tabList,
      filterData: filter
    })
    let actType = 'refresh'
    this.getProInfoList(filter,actType)
  },
  //获取某个商家商品列表///store/inst/goodsList
  //orgId,cateId,goodsName,sortType,sortOrder,pageNum,pageSize
  getProInfoList(data, actType){
    wx.showLoading({
      title: '加载中...',
    })
    let url = app.globalData.baseUrl + 'apiMall/store/inst/goodsList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    if(res.data.code==='200'){
      let content = res.data.content
      let cateProTotal = content.total
      let hasNextPage = content.hasNextPage
      let list = content.list
      let setList=this.initProList(list)
      if (type === 'refresh') {
        this.setData({
          proList: setList,
          cateProTotal,
          hasNextPage
        })
        if(this.data.hasGetCartData){
          this.proDataCompare(this.data.cartProList,this.data.proList)
        }
      }
      if (type === 'reachBottom') {
        let proList = this.data.proList
        setList.forEach(item => {
          proList.push(item)
        })
        this.setData({
          proList,
          cateProTotal,
          hasNextPage
        })
        if(this.data.hasGetCartData){
          this.proDataCompare(this.data.cartProList,this.data.proList)
        }
      }
    }
    if(this.data.hasGetCartData===false){
      this.getCartProList()
    }
    wx.hideLoading()
  },
  //获取购物车数据///shopcar/list
  getCartProList(){
    let url = app.globalData.baseUrl + 'apiMall/shopcar/list'
    util.getRequestList(url, false, this.getCartProListRes)
  },
  getCartProListRes(res,type){
    if(res.data.code==='200'){
      let list=res.data.content
      list.forEach(item=>{
        item.cusChecked = item.chooseFlag == "1" ? true : false
        item.cusBuyCount = item.buyCount
        item.cusSalePrice = util.getMoney(item.attrPrice).toString()
        item.cusOriPrice = util.getMoney(item.attrNormalPrice).toString()
      })
      this.proDataCompare(list,this.data.proList)
      this.changeCartData(list)
      this.setData({hasGetCartData:true})
    }
  },
  //添加购物一条记录///shopcar/add
  //orgId,goodsId,attrId,buyCount,chooseFlag
  addCartRecord(data){
    let url = app.globalData.baseUrl + 'apiMall/shopcar/add'
    util.postRequestList(url, data, false, this.addCartRecordRes)
  },
  addCartRecordRes(res,type){
    if(res.data.code==='200'){
      let list=this.data.cartProList
      let content=res.data.content
      content.cusChecked = content.chooseFlag == "1" ? true : false
      content.cusBuyCount = content.buyCount
      content.cusSalePrice = util.getMoney(content.attrPrice).toString()
      content.cusOriPrice = util.getMoney(content.attrNormalPrice).toString()
      list.unshift(content)
      this.changeCartData(list)
    }
  },
  //更新一条数据功能/shopcar/update
  //carId,buyCount,chooseFlag
  updateCartRecord(data) {
    let url = app.globalData.baseUrl + 'apiMall/shopcar/update'
    util.postRequestList(url, data, false, this.updateCartRecordRes)
  },
  updateCartRecordRes(res, type) {},
  //清空购物车/shopcar/release//无参
  clearCartRecord() {
    let data={}
    let url = app.globalData.baseUrl + 'apiMall/shopcar/release'
    util.postRequestList(url, data, false, this.clearCartRecordRes)
  },
  clearCartRecordRes(res, type) {},
  //删除购物记录///shopcar/delete//carId
  delCartRecord(data) {
    let url = app.globalData.baseUrl + 'apiMall/shopcar/delete'
    util.postRequestList(url, data, false, this.delCartRecordRes)
  },
  delCartRecordRes(res, type) {},
  //加载更多..
  bindReachBottom(){
    if(this.data.hasNextPage){
      let filterData = this.data.filterData
      filterData.pageNum += 1
      this.setData({filterData})
      let actType='reachBottom'
      this.getProInfoList(filterData,actType)
    }
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let storeInfo=JSON.parse(options.storeInfo)
    wx.setNavigationBarTitle({
      title: storeInfo.orgName
    })
    this.setData({
      storeInfo
    })
    this.getCateList(storeInfo.orgId)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    if(!this.data.isNewPage){
      this.getCartProList();
    }
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})