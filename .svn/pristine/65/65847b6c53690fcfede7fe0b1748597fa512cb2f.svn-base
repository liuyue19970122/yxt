// pages/receipt/submit-order/submit.js
var util = require('../../../utils/util.js');
const app = getApp()
import Notify from '../../../miniprogram_npm/vant-weapp/notify/notify';
var times = (new Date()).getTime()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    foodList: [],
    desktopList: [],
    totalMoney: '',
    totalCount: '',
    tableId: [],
    orderId: '',
    showType: false,
    realMoney:'',
    showPayPwdInput: false, //是否展示密码输入层
    pwdVal: '', //输入的密码
    payFocus: true, //文本框焦点
    showMoneyDialog:false,
    payTypeList:[],
    payFlag:0,
    status:0,
    orderNo:'',
    beginTime:'',
    endTime:'',
    remark:'',
    peopleCount:0,
    hangId:'',
    isHangBill:false,
    hangName:'',
    typeName:'请选择'
  },
  bindCartReduce(e){
    if(this.data.isSubmit){
      return false
    }
    this.setData({
      isSubmit:true
    })
    var that=this
    wx.showModal({
      title: '提示',
      content: '确定退回该菜么？',
      success:function(res){
        if(res.confirm){
          var url = app.globalData.baseUrl + 'apiMall/food/order/removeFood'
          var data = {
            orderId: that.data.orderId,
            detailKeyId: e.currentTarget.dataset.id
          }
          util.postRequestList(url, data, false, that.reduceRes)
        }else{
          that.setData({
            isSubmit:false
          })
        }
      }
    })
    
  },
  reduceRes(res){
    if(res.data.code==200){
      this.getOrderDetail()
    }else{
      wx.showToast({
        icon:'none',
        title: res.data.message,
      })
    }
    this.setData({
      isSubmit:false
    })
  },
  getPeopleCount(e){
    this.setData({
      peopleCount:e.detail
    })
  },
  goChooseDesk: function () {
    wx.navigateTo({
      url: '/pages/receipt/table-list/list?type=submit&orderId='+this.data.orderId,
    })
  },
  bindShowReal(){
    this.setData({
      showMoneyDialog:true
    })
  },
  bindDelDesk(e){
    this.setData({
      delIndex:e.currentTarget.dataset.index
    })
    var that=this
    wx.showModal({
      title: '提示',
      content: '确认取消该桌位么',
      success:function(res){
        if(res.confirm){
          var url = app.globalData.baseUrl +'apiMall/food/order/removeDesk'
          var data={
            orderId:that.data.orderId,
            deskId:e.currentTarget.dataset.id
          }
          util.postRequestList(url,data,false,that.delDeskRes)
        }
        if(res.cancel){

        }
      }
    })
  },
  delDeskRes(res){
    if(res.data.code!=200){
      wx.showToast({
        title: res.data.message,
      })
    }else{
      var list =this.data.desktopList
      var index=this.data.delIndex
      list.splice(index,1)
      this.setData({
        desktopList:list
      })
    }
  },
  getOrderDetail() {
    var url = app.globalData.baseUrl + 'apiMall/food/order/detail'
    var data = {
      orderId: this.data.orderId
    }
    util.getRequestListData(url, data, false, this.detailRes)
  },
  detailRes(res) {
    if (res.data.code == 200) {
      var detail = res.data.content
      var orderInfo = detail.orderInfo
      orderInfo.totalMoney = util.getMoney(orderInfo.totalMoney)
      var foodList = res.data.content.foodList.map((item) => {
        item.perMoney = util.getMoney(item.perMoney)
        item.money = util.getMoney(item.money)
        return item
      })
      this.setData({
        foodList: foodList,
        desktopList: res.data.content.deskInfo,
        orderInfo: orderInfo,
        peopleCount: orderInfo.peopleCount,
        remark: orderInfo.remark,
      })
      if(this.data.payFlag!=0){
        this.setData({
          realMoney:util.getMoney(orderInfo.realMoney),
          orderNo: orderInfo.orderNo,
          beginTime: util.formatTime(orderInfo.beginTime),
          endTime:orderInfo.endTime!=null? util.formatTime(orderInfo.endTime):null,
          typeName:orderInfo.payName,
          payCode:orderInfo.payCode,
          hangName: orderInfo.hangUserName
        })
        
      }
    } else {
      wx.showModal({
        title: '提示',
        content: res.data.message,
        showCancel: false
      })
    }
  },
  goAdd: function() {
    wx.navigateTo({
      url: '../order-food/cart?orderId=' + this.data.orderId,
    })
  },
  bindSelectHang(){
    wx.navigateTo({
      url: '../credit-manager/people-list/list?type=submit',
    })
  },
  bindChooseType(e){
    var index = e.currentTarget.dataset.index
    var code = e.currentTarget.dataset.code
    var that=this
    this.setData({
      typeId:that.data.payTypeList[index].keyId,
      typeName:e.currentTarget.dataset.name,
      showType:false
    })
    if (code == 'account') {
      this.setData({
        isHangBill:1
      })
      wx.navigateTo({
        url: '/pages/receipt/credit-manager/people-list/list?type=submit',
      })
    }else{
      this.setData({
        isHangBill: 0
      })
    }
    // this.showInputLayer()
  },
  goPay: function() {
    if(this.data.peopleCount<1){
      Notify({
        type:'warning',
        message:'就餐人数至少一人'
      })
      return false
    }
    if (this.data.realMoney<=0){
      Notify({
        type: 'warning',
        message: '实付金额需大于0'
      })
      return false
    }
    var url = app.globalData.baseUrl + 'apiMall/food/order/payOrder'
    var data = {
      orderId: this.data.orderId,
      // password: this.data.pwdVal,
      realMoney: this.data.realMoney,
      payTypeId:this.data.typeId,
      peopleCount:this.data.peopleCount,
      isHangBill: this.data.isHangBill
    }
    if(this.data.isHangBill==1){
      data.hangUserId=this.data.hangId
    } 
    util.postRequestList(url,data,false,this.payRes)
    // this.setData({
    //   pwdVal: ''
    // })
  },
  payRes(res){
    if(res.data.code==200){
      console.log(this.data.orderId)
      wx.redirectTo({
        url: '../pay-result/result?orderId='+this.data.orderId+"&realMoney="+this.data.realMoney+"&tableId="+JSON.stringify(this.data.desktopList),
      })
    }else{
      wx.showToast({
        title: res.data.message,
      })
    }
  },
  sureMoney(){
    if(this.data.realMoney==''){
      Notify({
        type:'warning',
        message:'请输入实付金额'
      }) 
    } else if (!this.data.typeId){
      Notify({
        type: 'warning',
        message: '请选择支付方式'
      }) 
    } else {
      this.goPay()
    }
    
  },
  goChoose: function() {
    this.setData({
      showType: true
    })
  },
  realPay() {
    console.log("000")
  },
  bindRelease(){
    var url = app.globalData.baseUrl +'apiMall/food/desktop/release'
    var data={
      orderId: this.data.orderId 
    }
    util.postRequestList(url,data,false,this.releaseRes)
  },
  releaseRes(res){
    if(res.data.code==200){
      wx.redirectTo({
        url: '../table-list/list?type=choose',
      })
    }
  },
  getRealMoney(e) {
    this.setData({
      realMoney: util.clearNoNum(e.detail)
    })
  },
  onClose() {
    this.setData({
      showType: false,
      showMoneyDialog:false,
    })
  },
  /**
   * 显示支付密码输入层
   */
  showInputLayer: function() {
    this.setData({
      showPayPwdInput: true,
      payFocus: true
    });
  },
  /**
   * 隐藏支付密码输入层
   */
  hidePayLayer: function() {
    var val = this.data.pwdVal;
    this.setData({
      showPayPwdInput: false,
      payFocus: false,
    });
  },
  getPayType(){
    var url=app.globalData.baseUrl+'apiMall/food/order/listPayType'
    util.getRequestList(url,false,this.typeRes)
  },
  typeRes(res){
    if(res.data.code==200){
      this.setData({
        payTypeList:res.data.content
      })
    }
  },
  /**
   * 获取焦点
   */
  getFocus: function() {
    this.setData({
      payFocus: true
    });
  },
  /**
   * 输入密码监听
   */
  inputPwd: function(e) {
    this.setData({
      pwdVal: e.detail.value
    });
    if (e.detail.value.length >= 6) {
      this.hidePayLayer();
      this.goPay()
    }
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    var prevPage = util.getPrevPage()
    this.setData({
      foodList: prevPage.data.foodList,
      totalMoney: prevPage.data.totalMoney,
      totalCount: prevPage.data.totalCount,
      orderId: options.orderId
    })
    if(options.stauts){
      this.setData({
        stauts:options.status
      })
    }
    if (options.payFlag) {
      this.setData({
        payFlag: options.payFlag
      })
    }
    this.getOrderDetail()
    this.getPayType()
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function() {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function() {
    this.getOrderDetail()
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function() {


  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function() {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function() {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function() {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {

  }
})