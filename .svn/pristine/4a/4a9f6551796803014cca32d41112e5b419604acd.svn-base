// pages/pro_manage/pro_list/list.js
let util = require('../../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    searchValue:'',
    proList: [],
    filterData: {
      orgId: '',
      cateId: -1,
      goodsName: '',
      sortType: '',//价格：price,销量：count
      sortOrder: -1,//排序方向 1(>)/0(<)/-1
      pageNum: 1,
      pageSize: 10
    },
    orgId: 1,
    orgName: '',
    goodsName: '',
    proSpecList: [],
    scrollTop:0,
    proSpecShow: false,
    checkAllList: [
      { value: 1, checked: false, count: 0 }
    ],//控制全选按钮
    cateProTotal: 0,
    compList: [
      { title: '销量', down: false, up: false, num: 0, type: 'sale' },
      { title: '价格', down: false, up: false, num: 0, type: 'price' }
    ],
    cartProList: [],
    cartCheckValue: [],
    cartEmpty: true,
    showCart: false,
    hideCartImg: true,
    buyTotalCount: 0,
    buyTotalMoney: 0,
    buyFavMoney: 0
  },
  onSearch(e){
    let goodsName=e.detail
    let filterData=this.data.filterData
    filterData.goodsName = goodsName
    filterData.pageNum=1
    let scrollTop=0
    let actType='refresh'
    this.getProInfoList(filterData,actType)
    this.setData({
      filterData,
      scrollTop
    })
  },
  seeProDetail(e) {
    let index = parseInt(e.detail.currentTarget.dataset.index)
    let list = this.data.proList
    let id = list[index].keyId
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?id=' + id + '&actType=detail'
    })
  },
  //排序功能
  sortClick(e) {
    console.log(e)
    let type = e.currentTarget.dataset.type
    let curIndex = parseInt(e.currentTarget.dataset.index)
    let list = this.data.compList
    let num = list[curIndex].num + 1
    list[curIndex].num = num
    let filter = this.data.filterData
    filter.pageNum = 1
    filter.pageSize = 10
    let actType = 'refresh'
    list.forEach((item, index) => {
      if (curIndex !== index) {
        item.down = false
        item.up = false
        item.num = 0
      }
    })
    if (num % 3 === 0) {
      list[curIndex].up = false
      list[curIndex].down = false
      filter.sortType = ''//价格：price,销量：countx
      filter.sortOrder = -1//排序方向 1(>)/0(<)/-1
     
    }
    if (num % 3 === 1) {
      list[curIndex].up = false
      list[curIndex].down = true
      filter.sortOrder = 1//排序方向 1(>)/0(<)/-1
      if (type === 'sale') {
        filter.sortType = 'count'//价格：price,销量：count
      }
      if (type === 'price') {
        filter.sortType = 'price'//价格：price,销量：count
      }
    }
    if (num % 3 === 2) {
      list[curIndex].up = true
      list[curIndex].down = false
      filter.sortOrder = 0//排序方向 1(>)/0(<)/-1
      if (type === 'sale') {
        filter.sortType = 'count'//价格：price,销量：count
      }
      if (type === 'price') {
        filter.sortType = 'price'//价格：price,销量：count
      }
    }
    this.getProInfoList(filter, actType)
    this.setData({
      compList: list,
      filterData: filter,
      scrollTop: 0
    })
  },

  //查看购物车详情
  bindShowCard() {
    if (this.data.cartEmpty) {
      wx.showToast({
        title: '购物车空的',
        icon: 'none'
      })
    } else {
      let show = !this.data.showCart
      let imgShow = !this.data.hideCartImg
      this.setData({
        showCart: show,
        hideCartImg: imgShow
      })
    }
  },
  closeCart() {
    this.setData({
      showCart: false,
      hideCartImg: true
    })
  },
  //购物车内商品操作
  bindCartAdd(e) {
    let index = parseInt(e.target.dataset.index)
    let cpl = this.data.cartProList
    let count = cpl[index].cusBuyCount
    cpl[index].cusBuyCount = count + 1
    this.changeCartData(cpl)
    this.setData({
      cartProList: cpl
    })
  },
  bindCartReduce(e) {
    let index = parseInt(e.target.dataset.index)
    let cpl = this.data.cartProList
    let count = cpl[index].cusBuyCount
    if (count === 1) {
      cpl.splice(index, 1)
    } else {
      cpl[index].cusBuyCount = count - 1
    }
    this.changeCartData(cpl)
    this.setData({
      cartProList: cpl
    })
  },
  //购物操作展示某个商品规格
  bindBuy(e) {
    console.log(e)
    let index = parseInt(e.target.dataset.index)
    let list = this.data.proList
    let proSpecList = list[index].attrList
    let alCart = JSON.parse(wx.getStorageSync('cartProList'))
    if (alCart.length) {
      proSpecList.forEach(item => {
        alCart.forEach(value => {
          if (item.orgId === value.orgId && item.goodsId === value.goodsId && item.keyId === value.keyId) {
            item.cusBuyCount = value.cusBuyCount
          }
        })
      })
    }
    this.setData({
      proSpecShow: true,
      proSpecList: proSpecList
    })
  },
  //购买数量减
  bindCountReduce(e) {
    let index = parseInt(e.target.dataset.index)
    let list = this.data.proSpecList
    let count = list[index].cusBuyCount
    let orgId = list[index].orgId
    let attrId = list[index].keyId
    let proList = this.data.proList
    let cartProList = this.data.cartProList
    if (count) {
      count--
      list[index].cusBuyCount = count
      for (let i = 0; i < cartProList.length; i++) {
        if (cartProList[i].orgId === orgId && cartProList[i].keyId === attrId) {
          cartProList[i].cusBuyCount = count
          if (count === 0) {
            cartProList.splice(i, 1)
          }
        }
      }
      for (let i = 0; i < proList.length; i++) {
        if (proList.keyId === orgId) {
          let al = proList[i].attrList
          for (let j = 0; j < al.length; j++) {
            if (al[j].keyId === attrId) {
              al[j].cusBuyCount = count
            }
          }
        }
      }
      this.setData({
        proSpecList: list,
        proList: proList,
        cartProList: cartProList
      })
      this.changeCartData(cartProList)
    }
  },
  //购买数量加
  bindCountAdd(e) {
    let index = parseInt(e.target.dataset.index)
    let list = this.data.proSpecList
    let count = list[index].cusBuyCount
    console.log(count)
    let orgId = list[index].orgId
    let attrId = list[index].keyId
    let proList = this.data.proList
    let cartProList = this.data.cartProList
    for (let i = 0; i < proList.length; i++) {
      if (proList.keyId === orgId) {
        let al = proList[i].attrList
        for (let j = 0; j < al.length; j++) {
          if (al[j].keyId === attrId) {
            al[j].cusBuyCount = al[j].cusBuyCount + 1
          }
        }
      }
    }
    if (count === 0) {
      count++
      list[index].cusChecked = true
      list[index].cusBuyCount = count
      cartProList.push(list[index])
    } else {
      list[index].cusBuyCount = count + 1
      for (let i = 0; i < cartProList.length; i++) {
        if (cartProList[i].orgId === orgId && cartProList[i].keyId === attrId) {
          cartProList[i].cusBuyCount = count + 1
          console.log(cartProList[i].cusBuyCount)
          cartProList[i].cusChecked = true
        }
      }
    }
    this.setData({
      proSpecList: list,
      proList: proList,
      cartProList: cartProList
    })
    this.changeCartData(cartProList)
  },
  //购物车数据更改
  changeCartData(cartProList) {
    console.log(cartProList)
    let cpl = cartProList.length
    if (cpl) {
      let buyTotalCount = 0
      let buyTotalMoney = 0
      let buyFavMoney = 0
      let oriPrice = 0
      let cartCheckValue = []
      let checkAllList = this.data.checkAllList
      cartProList.forEach((item, index) => {
        if (item.cusChecked) {
          cartCheckValue.push(index.toString())
          buyTotalCount += item.cusBuyCount
          buyTotalMoney += item.attrPrice * item.cusBuyCount
          oriPrice += item.attrNormalPrice * item.cusBuyCount
        }
      })
      checkAllList[0].checked = cartCheckValue.length === cpl ? true : false
      buyFavMoney = oriPrice - buyTotalMoney
      buyTotalMoney = util.getMoney(buyTotalMoney).toString()
      buyFavMoney = util.getMoney(buyFavMoney).toString()
      let hideCartImg = this.data.showCart ? false : true
      this.setData({
        buyTotalCount,
        buyFavMoney,
        buyTotalMoney,
        cartCheckValue,
        checkAllList,
        hideCartImg,
        cartEmpty: false
      })
    } else {
      this.setData({
        cartEmpty: true,
        hideCartImg: true,
        showCart: false
      })
    }
    let cplStr = JSON.stringify(cartProList)
    wx.setStorage({
      key: 'cartProList',
      data: cplStr,
    })
  },
  //bindSpecChoice选取某个商品规格数据
  bindSpecChoice(e) {
    console.log(e)
    let index = parseInt(e.detail.value)
    let list = this.data.proSpecList
    let obj = list[index]
    let orgId = obj.orgId
    let cartList = this.data.cartProList

    cartList.push(obj)
    this.setData({
      cartProList: cartList
    })
  },
  //购物车全选
  cartCheckAll(e) {
    console.log(e)
    let len = e.detail.value.length
    let list = this.data.cartProList
    list.forEach(item => {
      item.cusChecked = len ? true : false
    })
    this.changeCartData(list)
    this.setData({
      cartProList: list
    })
  },
  //购物车选择更改
  cartCheckboxChange(e) {
    console.log(e)
    let curArr = e.detail.value
    console.log(curArr)
    let prevArr = this.data.cartCheckValue
    console.log(prevArr)
    let difArr = this.getArrDifference(curArr, prevArr)
    let index = parseInt(difArr[0])
    console.log(index)
    let list = this.data.cartProList
    list[index].cusChecked = !list[index].cusChecked
    this.changeCartData(list)
  },
  //获取两个数组中不中的值
  getArrDifference(arr1, arr2) {
    return arr1.concat(arr2).filter(function (v, i, arr) {
      return arr.indexOf(v) === arr.lastIndexOf(v);
    });
  },
  //清空购物车
  bindClearCart() {
    let that = this
    wx.showModal({
      title: '提示',
      content: '是否清空购物车',
      success(res) {
        if (res.confirm) {
          that.setData({
            cartProList: [],
            showCart: false,
            cartEmpty: true,
            hideCartImg: true,
          })
          wx.setStorage({
            key: 'cartProList',
            data: '[]',
          })
        } else if (res.cancel) {
          console.log('用户点击取消')
        }
      }
    })
  },
  //关闭某个商品规格详情
  closeProSpec() {
    this.setData({
      proSpecShow: false
    })
  },
  //去订单提交界面bindToSubmit
  bindToSubmit() {
    console.log(111)
    console.log(this.data.cartEmpty)
    if (this.data.cartEmpty) {
      wx.showToast({
        title: '购物车空的',
        icon: 'none'
      })
    } else {
      wx.navigateTo({
        url: '/pages/mall/mall-suborder/order',
      })
    }
  },
  
  //获取某个商家商品列表///store/inst/goodsList
  //orgId,cateId,goodsName,sortType,sortOrder,pageNum,pageSize
  getProInfoList(data, actType) {
    wx.showLoading({
      title: '加载中...',
    })
    let url = app.globalData.baseUrl + 'apiMall/store/inst/goodsList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    let content = res.data.content
    let cateProTotal = content.total
    let hasNextPage = content.hasNextPage
    let list = content.list
    let orgId = parseInt(this.data.orgId)
    list.forEach(item => {
      item.orgId = orgId
      item.orgName = this.data.orgName
      let imgSrc = item.goodsPic
      let goodsId = item.keyId
      let goodsName = item.goodsName
      let attrList = JSON.parse(item.attrList)
      console.log(attrList)
      attrList.sort((a, b) => {
        return a.attrPrice - b.attrPrice
      })
      attrList.forEach(item => {
        item.cusBuyCount = 0
        item.goodsPic = imgSrc
        item.orgId = orgId
        item.orgName = this.data.orgName
        item.goodsId = goodsId
        item.goodsName = goodsName
        item.cusSalePrice = util.getMoney(item.attrPrice).toString()
        item.cusOriPrice = util.getMoney(item.attrNormalPrice).toString()
        item.cusChecked = false
      })
      item.attrList = attrList
      item.cusSalePrice = util.getMoney(attrList[0].attrPrice)
      item.cusOriPrice = util.getMoney(attrList[0].attrNormalPrice)
      item.cusSalePriceFen = attrList[0].attrPrice
      item.cusOriPriceFen = attrList[0].attrNormalPrice
    })
    if (type === 'refresh') {
      this.setData({
        proList: list,
        cateProTotal,
        hasNextPage
      })
    }
    if (type === 'reachBottom') {
      let proList = this.data.proList
      list.forEach(item => {
        proList.push(item)
      })
      this.setData({
        proList,
        cateProTotal,
        hasNextPage
      })
    }
    wx.hideLoading()
  },

  handleScroll(e) {
    this.setData({ scrollTop: e.detail.scrollTop })
  },
  bindReachBottom() {
    if (this.data.hasNextPage) {
      let filterData = this.data.filterData
      filterData.pageNum += 1
      this.setData({ filterData })
      let actType = 'reachBottom'
      this.getProInfoList(filterData, actType)
    }
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let orgName = options.name
    let orgId = options.id
    let searchValue=options.key
    let filterData=this.data.filterData
    filterData.orgId=orgId
    filterData.goodsName = searchValue
    // let orgId=1
    this.setData({
      orgId,
      orgName,
      searchValue,
      filterData
    })
    let actType='refresh'
    this.getProInfoList(filterData,actType)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    //购物车信息
    let cartList = wx.getStorageSync('cartProList')
    if (!cartList) {
      wx.setStorage({
        key: 'cartProList',
        data: '[]',
      })
      this.setData({
        cartEmpty: true
      })
    } else {
      let cartProList = JSON.parse(cartList)
      this.changeCartData(cartProList)//更新购物数据
      this.setData({
        cartProList
      })
    }
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})