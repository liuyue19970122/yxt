// pages/mall/pro_add/add.js
let util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    proId:'',
    proCateList:[],
    sliderId:'',
    tabId:'',
    multiProArray:[],
    multiProIndex:[],
    storageCateList:[],
    multiStorageArray: [],
    multiStorageIndex:[],
    themeImageList: [],
    choiceStorageName:'',
    proInfo: {
      cateId: '',
      goodsName: '',
      description: '',
      goodsPics: [],
      stockId: '',
      stockCode: '',
      status: 1,
      detail: '',//图文详情
      attrsList: []//规格列表
    },
    specList: [],
    specSelArr:[],
    actType:'add',//新增或修改商品判断/add新增/edit修改
    editorObj:null,
    editorHtml:'',
    specActType:'edit'//获取规格操作动作类型
  },
  //商品分类改变
  bindMultiProPickerChange(e){
    let cateId='proInfo.cateId'
    let val=e.detail.value
    let id=this.data.multiProArray[1][val[1]].id
    this.setData({
      [cateId]:id
    })
    console.log(this.data.proInfo)
  },
  bindMultiProPickerColumnChange(e) {
    console.log(e)
    console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
    let data = {
      multiProArray: this.data.multiProArray,
      multiProIndex: this.data.multiProIndex
    };
    let cateList = this.data.proCateList
    console.log(cateList)
    let columnIndex = e.detail.column
    data.multiProIndex[columnIndex] = e.detail.value;
    switch (columnIndex) {
      case 0:
        let cateId = data.multiProArray[columnIndex][e.detail.value].id
        let obj = ''
        cateList.forEach(item => {
          if (item.keyId === cateId) {
            obj = item.nextList
          }
        })
        let nextList = JSON.parse(obj)
        let nextArr = []
        nextList.forEach(item => {
          let obj = {
            id: item.keyId,
            name: item.cateName
          }
          nextArr.push(obj)
        })
        data.multiProArray[1] = nextArr
        data.multiProIndex[1] = 0;
        break;
      case 1:
        data.multiProIndex[1] = e.detail.value;
        break;
    }
    this.setData(data);
  },
  //商品分类change
  multiStorageChange(e) {
    let cateId = 'proInfo.cateId'
    let val = e.detail.value
    let id = this.data.multiStorageArray[1][val[1]].id
    this.setData({
      [cateId]: id
    })
    console.log(this.data.proInfo)
  },
  multiStorageColumnChange(e) {
    console.log(e)
    console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
    let data = {
      multiStorageArray: this.data.multiStorageArray,
      multiStorageIndex: this.data.multiStorageIndex
    };
    let cateList = this.data.proCateList
    console.log(cateList)
    let columnIndex = e.detail.column
    data.multiStorageIndex[columnIndex] = e.detail.value;
    switch (columnIndex) {
      case 0:
        let cateId = data.multiStorageArray[columnIndex][e.detail.value].id
        let obj = ''
        cateList.forEach(item => {
          if (item.keyId === cateId) {
            obj = item.nextList
          }
        })
        let nextList = JSON.parse(obj)
        let nextArr = []
        nextList.forEach(item => {
          let obj = {
            id: item.keyId,
            name: item.cateName
          }
          nextArr.push(obj)
        })
        data.multiStorageArray[1] = nextArr
        data.multiStorageIndex[1] = 0;
        break;
      case 1:
        data.multiStorageIndex[1] = e.detail.value;
        break;
    }
    this.setData(data);
  },
  //自定义名称
  bindProNameInput(e){
    let goodsName ='proInfo.goodsName'
    let val=e.detail.value
    this.setData({
      [goodsName]:val
    })
    console.log(this.data.proInfo)
  },
  //去选择库存产品
  bindTochoice(){
    wx.navigateTo({
      url: '/pages/mall/pro-add/storage-choice/choice',
    })
  },
  //封面展示
  bindUploadThemeImg(){
    wx.chooseImage({
      count: 1,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success(res) {
        // tempFilePath可以作为img标签的src属性显示图片
        const tempFilePaths = res.tempFilePaths
        const width=375
        const height=250
        console.log(tempFilePaths)
        wx.navigateTo({
          url: '/pages/common/cut-image/cut-image?imgSrc=' + tempFilePaths[0] + '&width=' + width + '&height=' + height +'&key=themeImageList&&type=Array'
        })
      }
    })
  },
  //获取editor内容，图文详情
  getEditorContent(e){
    let html=e.detail.html
    let htmlContent='proInfo.detail'
    this.setData({
      [htmlContent]:html
    })
    console.log(e)
  },
  
  //添加商品规格
  handleAddspec() {
    let act = this.data.actType
    let nav ='/pages/mall/pro-spec/add/add'
    if (act==='edit'){
      nav +='?proActType='+act+'&proId='+this.data.proId
    }
    if(act==='add'){
      nav += '?proActType=' + act 
    }
    wx.navigateTo({
      url: nav
    })
  },
  //规格选择
  bindSpecCheck(e){
    let actType=this.data.actType
    let curSelArr=e.detail.value
    let list=this.data.specList
    let specSelArr=this.data.specSelArr
    let difArr=this.getArrDifference(curSelArr,specSelArr)
    console.log(difArr)
    let index=parseInt(difArr[0])
    console.log(list)
    console.log(index)
    let status = list[index].status ? 0 : 1
    list[index].status = status
    this.setData({
      specList:list,
      specSelArr: curSelArr
    })
    if(actType==='edit'){
      let attrId=list[index].keyId
      this.changeSpecStatus(attrId, status)
    }
  },
  //获取两个数组中不中的值
  getArrDifference(arr1, arr2) {
    return arr1.concat(arr2).filter(function (v, i, arr) {
      return arr.indexOf(v) === arr.lastIndexOf(v);
    });
  },
  //编辑商品修改规格上下架/store/inst/upOrDown
  //goodsId,attrId,status
  changeSpecStatus(attrId,status){
    let url = app.globalData.baseUrl + 'apiMall/store/inst/upOrDown'
    let data={
      goodsId:'',
      attrId: attrId,
      status: status
    }
    util.postRequestList(url, data, false, this.changeSpecStatusRes)
  },
  changeSpecStatusRes(res,actType){
    if(res.stockCode===200&&res.data.code!=='200'){

    }
  },
  //修改规格
  bindEditSpec(e) {
    let index = e.currentTarget.dataset.index
    let specActType = e.currentTarget.dataset.text
    this.setData({
      specActType
    })
    let specList=this.data.specList
    let actType=this.data.actType
    let data = specList[index]
    data.goodsId=this.data.proId
    let dataStr=JSON.stringify(data)
    wx.navigateTo({
      url: '/pages/mall/pro-spec/edit/edit?data=' + dataStr + '&actType=' + actType+'&specIndex='+index
    })
  },
  //删除某个规格
  bindDeleteSpec(e) { 
    let specActType = e.currentTarget.dataset.text
    this.setData({
      specActType
    })
  }, 
  onClose(event) {
    const { position, instance } = event.detail;
    console.log(event)
    switch (position) {
      case 'left':
      case 'cell':
        instance.close();
        break;
      case 'right':
        setTimeout(()=>{
          if(this.data.specActType==='delete'){
            wx.showModal({
              title: '提示',
              content: '确认是否删除？',
              success(res) {
                if (res.confirm) {
                  console.log('用户点击确定')
                } else if (res.cancel) {
                  console.log('用户点击取消')
                }
              }
            })
          }
        },100)
        instance.close();
        // Dialog.confirm({
        //   message: '确定删除吗？'
        // }).then(() => {
          // instance.close();
        // });
        break;
    }
  },
  //商品描述
  bindinputDes(e){
    let des='proInfo.description'
    this.setData({
      [des]:e.detail.value
    })
  },
  //是否上架
  switchChange(e){
    let status = 'proInfo.status'
    if (e.detail.value) {
      this.setData({
        [status]: 1
      })
    } else {
      this.setData({
        [status]: 0
      })
    }
  },
  //预览详情
  handleToPreview(){
    let proInfo = JSON.stringify(this.data.proInfo)
    let specList = JSON.stringify(this.data.specList)
    let imgList = JSON.stringify(this.data.themeImageList)
    let html = this.data.editorHtml
    let htmlStr=html.replace(/=/g,'**')
    let htmlStr2 = htmlStr.replace(/&/g,'*')
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?actType=preview&proInfo=' + proInfo + '&specLsit=' + specList + '&imgList=' + imgList + '&html=' + htmlStr2
    })
  },
  //新增商品数据提交///store/inst/add
  submitAddProInfo() {
    let actType=this.data.actType
    if(actType==='add'){
      let data = this.data.proInfo
      console.log(data)
      data.goodsPics = JSON.stringify(this.data.themeImageList)
      data.attrsList = JSON.stringify(this.data.specList)
      let url = app.globalData.baseUrl + 'apiMall/store/inst/add'
      util.postRequestList(url, data, actType, this.addProInfoRes)
    }
    if(actType==='edit'){

    }
    
    // callBack(res, actType) //请求结果处理
  },
  addProInfoRes(res, actType) {
    let data=res.data.content
    let that = this
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];   //当前页面
    let prevPage = pages[pages.length - 2];  //上一个页面
    // prevPage.setData({
    //   ['proInfo.stockCode']: that.data.stockCode,
    //   ['proInfo.stockId']: that.data.stockId,
    //   choiceStorageName: strName
    // });
    wx.navigateBack({
      delta: -1
    })
  },
  //获取商品分类列表
  getProCateList(actType) {
    let url = app.globalData.baseUrl + 'apiMall/store/cate/list'
    util.getRequestList(url, actType, this.proCateListRes)
  },
  proCateListRes(res, actType) {
    console.log(res)
    let cateList = res.data.content
    let nextList=[]
    let sliderId = parseInt(this.data.sliderId)
    let tabId = parseInt(this.data.tabId)
    let arr=[]
    let nextArr=[]
    let twoArr=[]
    let multiProIndex=[0,0]
    cateList.forEach((item,index) => {
      let obj = {
        id: item.keyId,
        name: item.cateName
      }
      arr.push(obj)
      if (item.keyId === sliderId) {
        multiProIndex[0] = index
        nextList = JSON.parse(item.nextList)
      }
    })
    nextList.forEach((item,index)=>{
      let obj = {
        id: item.keyId,
        name: item.cateName
      }
      if(item.keyId===tabId){
        multiProIndex[1]=index
      }
      nextArr.push(obj)
    })
    twoArr[0]=arr
    twoArr[1]=nextArr
    this.setData({
      proCateList:cateList,
      multiProArray: twoArr,
      multiProIndex: multiProIndex
    })
    if(actType==='edit'){
      let id=this.data.proId
      let actType ='edit'
      this.getProDetail(id,actType)
    }
  },
  //获取商品实例详情///store/inst/detail
  //goodsId
  getProDetail(id,actType){
    let url = app.globalData.baseUrl + 'apiMall/store/inst/detail'
    let data = { goodsId:id}
    util.getRequestListData(url, data, actType,this.proDetailRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proDetailRes(res,actType){
    let data=res.data.content
    if(actType==='edit'){
      let goodsInfo = data.goodsInfo
      let detailInfo = data.detailInfo
      let imgList = data.imgList
      let attrList = data.attrList
      let specSelArr=[]
      attrList.forEach((item,index)=>{
        if(item.status===1){
          specSelArr.push(index.toString())
        }
      })
      this.setData({
        ['proInfo.cateId']: goodsInfo.cateId,
        ['proInfo.goodsName']: goodsInfo.goodsName,
        ['proInfo.description']: goodsInfo.description,
        ['proInfo.stockId']: goodsInfo.stockId,
        ['proInfo.stockCode']: goodsInfo.stockCode,
        ['proInfo.stockCode']: goodsInfo.stockCode,
        ['proInfo.status']: goodsInfo.status,
        choiceStorageName: goodsInfo.stockName,
        specList: attrList,
        themeImageList:imgList,
        editorHtml: detailInfo.detail,
        specSelArr: specSelArr
      })
      //this.data.editorObj.editorSetContent(detailInfo.detail)
    }
    console.log(res)
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    // this.setData({
    //   editorObj: this.selectComponent('#proEditor')
    // })
    console.log(options)
    let actType=options.actType
    let proId = options.id
    this.setData({
      actType:actType,
      proId:proId,
      sliderId:options.sliderId,
      tabId:options.tabId
    })
    console.log(this.data.sliderId)
    this.getProCateList(actType)
   
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    //获取editor组件对象
    this.setData({
      editorObj: this.selectComponent('#proEditor')
    })
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})