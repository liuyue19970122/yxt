// pages/pro_manage/pro_list/list.js
let util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    sliderList:[],
    sliderId:'',
    tabList:[],
    tabId:'',
    proList:[],
    activeSlider:0,
    activeTab:0,
    changeStatusIndex:0,
    searchInfo:'',
    pageData:{
      pageNum:1,
      pageSize: 5
    }
  },
  //搜索功能
  onSearch(e){
    let sliderList=this.data.sliderList
    let sliderId=sliderList[0].keyId
    let tabList = JSON.parse(sliderList[0].nextList) 
    let tabId = tabList[0].keyId
    let val=e.detail
    let pageData={
      pageNum:1,
      pageSize:5
    }
    this.setData({
      pageData,
      tabList,
      sliderId,
      tabId,
      activeTab: 0,
      activeSlider:0
    })
    let data = {
      cateId: tabId,
      goodsName: val,
      pageNum: 1,
      pageSize: 5
    }
    let actType = 'refresh'
    this.getProInfoList(data, actType)
    console.log(e)
  },
  //添加商品
  handleAddPro(){
    let sliderId = this.data.sliderId
    let tabId = this.data.tabId
    wx.navigateTo({
      url: '/pages/mall/pro-add/add?sliderId='+sliderId+'&tabId='+tabId+'&actType=add'
    })
  },
  //大类一级change事件
  onFirstCateChange(evt){
    console.log(evt)
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderId=sliderList[index].keyId
    let tabList=JSON.parse(sliderList[index].nextList)
    if(!tabList.length){
      return
    }
    let tabId=tabList[0].keyId
    this.setData({
      tabList,
      sliderId,
      tabId,
      activeTab:0
    })
    let data = {
      cateId: tabId,
      goodsName: '',
      pageNum:1,
      pageSize:5
    }
    let actType = 'refresh'
    this.getProInfoList(data, actType)
  },
  //大类二级change事件
  onSecondCateChange(evt){
    let index=evt.detail.index
    console.log(index)
    let tabList=this.data.tabList
    console.log(tabList)
    let tabId=tabList[index].keyId
    this.setData({
      tabId:tabId,
      activeTab:index
    })
    let data={
      cateId: tabId,
      goodsName:''
    }
    let actType='refresh'
    this.getProInfoList(data,actType)
    console.log(evt)
    // this.setData({
    //   activeTab:evt.detail.value
    // })
  },
  seeProDetail(e){
    let id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?id=' + id + '&actType=detail'
    })
  },
  //bindEdit 商品详情修改
  bindEdit(e){
    console.log(e)
    let id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/mall/pro-add/add?id='+id+'&actType=edit&sliderId='+this.data.sliderId+'&tabId='+this.data.tabId
    })
  },
  //更改商品上下架状态//store/inst/upOrDown
  //goodsId,attrId,status
  bindChangeStatus(e){
    let index = parseInt(e.target.dataset.index)
    this.setData({
      changeStatusIndex:index
    })
    let list=this.data.proList
    let status=list[index].status==1 ? 0:1
    let url = app.globalData.baseUrl + 'apiMall/store/inst/upOrDown'
    //postRequestList = function (url, data, actType, callBack)
    let data={
      goodsId: list[index].keyId,
      attrId:'',
      status:status
    }
    util.postRequestList(url,data,false,this.changeStatusRes)
  },
  changeStatusRes(res,actType){
    if(res.statusCode===200&&res.data.code==='200'){
      let list=this.data.proList
      let index=this.data.changeStatusIndex
      let status=list[index].status
      status === 1 ? list[index].status = 0 : list[index].status=1
      this.setData({
        proList:list
      })
    }
  },
  //获取分类列表//apiStock/stock/cate/list
  getCateList(){
    let url = app.globalData.baseUrl + 'apiStock/stock/cate/list'
    util.getRequestList(url, false, this.cateListRes)
  },
  cateListRes(res,type){
    let cusAll={
      cateLogo: null,
      cateName: "全部",
      defaultId: -1,
      keyId: -1,
      nextList: '[{"keyId":-1,"defaultId":-1,"cateName":"全部"}]'
    }
    let sliderList=res.data.content
    sliderList.unshift(cusAll)
    let tabList=JSON.parse(sliderList[0].nextList)
    let actType=false
    let tabId=tabList[0].keyId
    let sliderId = sliderList[0].keyId
    this.setData({
      sliderList,
      tabList,
      sliderId,
      tabId
    })
    this.getProInfoList({ cateId: tabId,goodsName:''},actType)
    console.log(res)
    console.log(type)
  },
  //获取商品列表///store/inst/adminList
  getProInfoList(data, actType){
    let url = app.globalData.baseUrl + 'apiMall/store/inst/adminList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    let list=res.data.content.list
    console.log(res)
    console.log(type)
    console.log(list)
    list.forEach(item=>{
      console.log(item)
      item.cusOriPrice = util.getMoney(item.NormalPrice).toString()
      console.log(111)
      item.cusSalePrice = util.getMoney(item.sellPrice).toString()
      console.log(222)
    })
    console.log(list)
    this.setData({
      proList:list
    })
    
  },

  handleScroll(){},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.getCateList()
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})