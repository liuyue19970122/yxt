// pages/pro_manage/pro_list/list.js
let util = require('../../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    sliderList:[],
    sliderName:'',
    tabList:[],
    tabName:'',
    active: '',
    storageProList:[],
    goodsName:'',
    stockCode:'',
    stockId:'',
  },
  //大类一级change事件
  onFirstCateChange(evt){
    console.log(evt)
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderName=sliderList[index].cateName
    let tabList=JSON.parse(sliderList[index].nextList)
    let tabName = tabList[0].cateName
    this.setData({
      tabList,
      sliderName,
      tabName,
      active: 0
    })
    let cateId = tabList[0].keyId
    let actType = 'refresh'
    this.getStorageProList(cateId, actType)
  },
  //大类二级change事件
  onSecondCateChange(evt){
    console.log(evt)
    let index=evt.detail.index
    console.log(this.data.tabList)
    let tabList=this.data.tabList
    let tabName = tabList[index].cateName
    this.setData({
      tabName
    })
    let cateId = tabList[index].keyId
    let actType='refresh'
    this.getStorageProList(cateId,actType)

  },
  //选择商品
  bindChoice(e){
    let curCode = e.currentTarget.dataset.code
    let curId = e.currentTarget.dataset.id
    let name = e.currentTarget.dataset.name
    if(this.data.code===curCode){
      this.setData({
        stockCode: '',
        stockId:'',
        goodsName:name
      })
    }else{
      this.setData({
        stockCode: curCode,
        stockId: curId,
        goodsName: name
      })
    }
  },
  //确认选择
  bindQueryChoice(){
    let that = this
    let pages = getCurrentPages();
    let currPage = pages[pages.length - 1];   //当前页面
    let prevPage = pages[pages.length - 2];  //上一个页面
    let strName = this.data.sliderName + '/' + this.data.tabName + '/' + this.data.goodsName
    prevPage.setData({
      ['proInfo.stockCode']: that.data.stockCode,
      ['proInfo.stockId']: that.data.stockId,
      choiceStorageName:strName
    });
    wx.navigateBack({
      delta: -1
    })
  },
  //获取库存分类列表
  getStorageCateList() {
    let url = app.globalData.baseUrl + 'apiStock//stock/cate/list'
    util.getRequestList(url, false, this.storageCateListRes)
  },
  storageCateListRes(res, type) {
    let sliderList = res.data.content
    let tabList = JSON.parse(sliderList[0].nextList)
    this.setData({
      sliderList,
      tabList
    })
    console.log(this.data.tabList)
    let cateId=tabList[0].keyId
    this.getStorageProList(cateId,false)
  },
  //获取仓库某类产品列表///stock/inst/list
  getStorageProList(cateId, actType) {
    let url = app.globalData.baseUrl + 'apiStock/stock/inst/list'
    util.getRequestListData(url, { cateId: cateId }, false, this.storageProListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  storageProListRes(res, actType) {
    console.log(res)
    let list=res.data.content
    list.forEach(item=>{
      item.date = util.formatTime(item.lastTime)
    })
    this.setData({
      storageProList:list
    })
    console.log(list)
  },
  handleScroll(){},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.getStorageCateList()
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})