// pages/pro_manage/pro_list/list.js
let util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    sliderList:[],
    activeSlider: 0,
    sliderId:'',
    tabList:[],
    activeTab: 0,
    tabId:'',
    tabShow:false,
    proList:[],
    selProIndex:null,
    changeStatusIndex:0,
    searchValue:'',
    filterData:{
      cateId:'', 
      goodsName: '', 
      sortType: '', //价格：price,销量：count
      sortOrder: -1,//排序方向 1(>)/0(<)/-1
      pageNum: 1,
      pageSize: 10
    },
    scrollTop:0,
    hasNextPage:true
  },
  //清除
  onClear(e){
    if (searchValue){
      let filterData = this.data.filterData
      filterData.goodsName = ''
      let tabShow = false
      this.setData({
        tabShow,
        filterData,
        scrollTop: 0,
        searchValue:''
      })
      let actType = 'refresh'
      this.getProInfoList(filterData, actType)
    }else{
      this.setData({
        searchValue: ''
      })
    }
  },
  //搜索功能
  onSearch(e){
    let searchValue=e.detail
    let filterData = this.data.filterData
    filterData.goodsName = searchValue
    filterData.cateId=-1
    filterData.pageNum=1
    filterData.pageSize=10
    let sliderList = this.data.sliderList
    let sliderId = sliderList[0].keyId
    let tabList = JSON.parse(sliderList[0].nextList)
    let tabId = tabList[0].keyId
    let tabShow = false
    this.setData({
      tabList,
      tabShow,
      sliderId,
      tabId,
      filterData,
      searchValue,
      scrollTop: 0,
      activeTab: 0,
      activeSlider:0,
    })
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
  },
  //添加商品
  handleAddPro(){
    let sliderId = this.data.sliderId
    let tabId = this.data.tabId
    wx.navigateTo({
      url: '/pages/mall/pro-add/add?sliderId='+sliderId+'&tabId='+tabId+'&actType=add'
    })
  },
  //大类一级change事件
  onFirstCateChange(evt){
    console.log(evt)
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderId=sliderList[index].keyId
    let tabList=JSON.parse(sliderList[index].nextList)
    if(!tabList.length){
      return
    }
    let tabId=tabList[0].keyId
    let filterData = this.data.filterData
    filterData.cateId = tabId
    filterData.goodsName = ''
    filterData.pageNum = 1
    filterData.pageSize = 10
    let tabShow = false
    this.setData({
      tabList,
      tabShow,
      sliderId,
      tabId,
      filterData,
      activeSlider: index,
      activeTab:0,
      scrollTop:0
    })
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
  },
  //大类二级change事件
  onSecondCateChange(evt){
    let index=evt.detail.index
    let tabList=this.data.tabList
    let tabId=tabList[index].keyId
    let filterData = this.data.filterData
    filterData.cateId = tabId
    filterData.goodsName=''
    filterData.pageNum = 1
    this.setData({
      filterData,
      tabId,
      scrollTop:0,
      activeTab:index
    })
    let actType='refresh'
    this.getProInfoList(filterData,actType)
  },
  handleClickTab(e){
    let index=e.detail
    let tabList = this.data.tabList
    let tabId = tabList[index].keyId
    let filterData = this.data.filterData
    filterData.cateId = tabId
    filterData.goodsName = ''
    filterData.pageNum = 1
    this.setData({
      filterData,
      tabId,
      scrollTop:0,
      activeTab: index
    })
    let actType = 'refresh'
    this.getProInfoList(filterData, actType)
  },
  //控制tab显示
  bindTabCollapse(e){
    let tabShow=!this.data.tabShow
    this.setData({
      tabShow
    })
  },
  seeProDetail(e){
    let index = e.detail
    let list=this.data.proList
    let id=list[index].keyId
    wx.navigateTo({
      url: '/pages/mall/pro-details/preview/preview?id=' + id + '&actType=detail'
    })
  },
  //bindEdit 商品详情修改
  bindEdit(e){
    console.log(e)
    let index = e.currentTarget.dataset.index
    let sliderId = this.data.proList[index].parentCateId
    let tabId = this.data.proList[index].cateId
    let id = this.data.proList[index].keyId
    wx.navigateTo({
      url: '/pages/mall/pro-add/add?id='+id+'&actType=edit&sliderId='+sliderId+'&tabId='+tabId
    })
  },
  //更改商品上下架状态//store/inst/upOrDown
  //goodsId,attrId,status
  bindChangeStatus(e){
    let index = parseInt(e.target.dataset.index)
    this.setData({
      changeStatusIndex:index
    })
    let list=this.data.proList
    let status=list[index].status==1 ? 0:1
    let url = app.globalData.baseUrl + 'apiMall/store/inst/upOrDown'
    //postRequestList = function (url, data, actType, callBack)
    let data={
      goodsId: list[index].keyId,
      attrId:'',
      status:status
    }
    util.postRequestList(url,data,false,this.changeStatusRes)
  },
  changeStatusRes(res,actType){
    if(res.statusCode===200&&res.data.code==='200'){
      let list=this.data.proList
      let index=this.data.changeStatusIndex
      let status=list[index].status
      status === 1 ? list[index].status = 0 : list[index].status=1
      this.setData({
        proList:list
      })
    }
  },
  //删除商品操作
  handleDelPro(e){
    let index = parseInt(e.target.dataset.index)
    this.setData({selProIndex:index})
    let list=this.data.proList
    let goodsId=list[index].keyId
    let _this=this
    wx.showModal({
      title:'提示',
      content:'是否删除该商品',
      showCancel:true,
      cancelText:'取消',
      confirmText:'确定',
      success:function(res){
        if(res.confirm){
          _this.delProInst(goodsId)
        }else if (res.cancel) {
          console.log('用户取消操作')
        }
      }
    })
  },
  //删除商品/store/inst/delete
  delProInst(goodsId){
    let url = app.globalData.baseUrl + 'apiMall/store/inst/delete'
    util.postRequestList(url,{goodsId},false,this.delProRes)
  },
  delProRes(res,type){
    if(res.data.code=='200'){
      let list=this.data.proList
      let index=this.data.selProIndex
      list.splice(index,1)
      this.setData({proList:list})
      wx.showToast({
        title: '删除成功',
        mask:true,
        duration:2000
      })
    }
  },
  //获取分类列表//apiStock/stock/cate/list
  getCateList(){
    let url = app.globalData.baseUrl + 'apiStock/stock/cate/list'
    util.getRequestList(url, false, this.cateListRes)
  },
  cateListRes(res,type){
    let cusAll={
      cateLogo: null,
      cateName: "全部",
      defaultId: -1,
      keyId: -1,
      nextList: '[{"keyId":-1,"defaultId":-1,"cateName":"全部"}]'
    }
    let sliderList=res.data.content
    sliderList.unshift(cusAll)
    let tabList=JSON.parse(sliderList[0].nextList)
    let actType='refresh'
    let tabId=tabList[0].keyId
    let sliderId = sliderList[0].keyId
    let filterData=this.data.filterData
    filterData.cateId=tabId
    this.setData({
      sliderList,
      tabList,
      sliderId,
      tabId,
      filterData
    })
    this.getProInfoList(filterData,actType)
  },
  //获取商品列表///store/inst/adminList
  //cateId,sortType,goodsName,sortOrder,pageNum,pageSize
  getProInfoList(data, actType){
    wx.showLoading({
      title: '加载中...',
      mask:true
    })
    let url = app.globalData.baseUrl + 'apiMall/store/inst/adminList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    let content=res.data.content
    let hasNextPage=content.hasNextPage
    let list=res.data.content.list
    list.forEach(item => {
      item.cusOriPrice = util.getMoney(item.NormalPrice).toString()
      item.cusSalePrice = util.getMoney(item.sellPrice).toString()
    })
    if (type === 'refresh') {
      this.setData({
        proList: list,
        hasNextPage
      })
    }
    if (type === 'reachBottom') {
      let proList = this.data.proList
      list.forEach(item => {
        proList.push(item)
      })
      this.setData({
        proList,
        hasNextPage
      })
    }
    wx.hideLoading()
  },
  bindReachBottom(){
    if(this.data.hasNextPage){
      let filterData = this.data.filterData
      filterData.pageNum += 1
      let actType='reachBottom'
      this.setData({
        filterData
      })
      this.getProInfoList(filterData,actType)
    }
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.getCateList()
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})