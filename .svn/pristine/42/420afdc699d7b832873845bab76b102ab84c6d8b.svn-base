// pages/pro_manage/pro_list/list.js
let util = require('../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    sliderList:[],
    sliderId:'',
    tabList:[],
    tabId:'',
    proList:[],
    activeNum:0,
    orgId:1,
    orgName:'',
    goodsName:'',
    cartProList:[],
    showCart:false,
    proSpecList:[],
    proSpecShow:false,
    checkAllList:[
      {value:1,checked:false,count:0}
    ],
    buyTotalCount:0,
    buyTotalMoney:0,
    buyFavMoney:0
  },
  //大类一级change事件
  onFirstCateChange(evt){
    console.log(evt)
    let index=evt.detail
    let sliderList=this.data.sliderList
    let sliderId=sliderList[index].keyId
    let tabList=JSON.parse(sliderList[index].nextList)
    if(!tabList.length){
      return
    }
    let tabId=tabList[0].keyId
    this.setData({
      tabList,
      sliderId,
      tabId,
      activeNum:0
    })
    let data = {
      orgId: this.data.orgId,
      cateId: tabId,
      goodsName: ''
    }
    let actType = 'refresh'
    this.getProInfoList(data, actType)
  },
  //大类二级change事件
  onSecondCateChange(evt){
    let index=evt.detail.index
    console.log(index)
    let tabList=this.data.tabList
    console.log(tabList)
    let tabId=tabList[index].keyId
    this.setData({
      tabId:tabId,
      activeNum:index
    })
    let data={
      orgId: this.data.orgId,
      cateId: tabId,
      goodsName:''
    }
    let actType='refresh'
    this.getProInfoList(data,actType)
    console.log(evt)
    // this.setData({
    //   activeNum:evt.detail.value
    // })
  },
  seeProDetail(e){
    let id = e.currentTarget.dataset.id
    wx.navigateTo({
      url: '/pages/mall/pro-details/detail?id=' + id + '&actType=detail'
    })
  },
  //查看购物车详情
  bindShowCard(){
    this.setData({
      showCart:true
    })
  },
  closeCart(){
    this.setData({
      showCart: false
    })
  },
  //购物操作展示某个商品规格
  bindBuy(e) {
    console.log(e)
    let index =parseInt(e.target.dataset.index)
    let list=this.data.proList
    let proSpecList = list[index].attrList
    let alCart = JSON.parse(wx.getStorageSync('cartProList'))
    if(alCart.length){
      proSpecList.forEach(item => {
        alCart.forEach(value=>{
          if (item.orgId === value.orgId && item.goodsId === value.goodsId && item.keyId === value.keyId){
            item.cusBuyCount=value.cusBuyCount
          }
        })
      })
    }
    this.setData({
      proSpecShow:true,
      proSpecList: proSpecList
    })
  },
  //购买数量减
  bindCountReduce(e){
    let index = parseInt(e.target.dataset.index) 
    let list=this.data.proSpecList
    console.log(list)
    console.log(index)
    let count=list[index].cusBuyCount
    let orgId=list[index].orgId
    let attrId=list[index].keyId
    let proList=this.data.proList
    let cartProList=this.data.cartProList
    console.log(count)
    console.log(cartProList)
    console.log(list)
    if(count){
      count--
      list[index].cusBuyCount = count
      for (let i = 0; i < cartProList.length; i++) {
        if (cartProList[i].orgId === orgId && cartProList[i].attrId === attrId) {
          cartProList[i].cusBuyCount = count
          console.log(count)
          if(count===0){
            cartProList.splice(i,1)
            console.log(cartProList)
          }
        }
      }
      for (let i = 0; i < proList.length; i++){
        if(proList.keyId===orgId){
          let al=proList[i].attrList
          for (let j = 0; j < al.length; j++){
            if(al[j].keyId===attrId){
              al[j].cusBuyCount=count
            }
          }
        }
      }
      this.setData({
        proSpecList: list,
        proList: proList,
        cartProList: cartProList
      })
      let cplStr = JSON.stringify(cartProList)
      wx.setStorage({
        key: 'cartProList',
        data: cplStr,
      })
    }
  },
  //购买数量加
  bindCountAdd(e){
    let index = parseInt(e.target.dataset.index)
    let list = this.data.proSpecList
    let count = list[index].cusBuyCount
    let orgId = list[index].orgId
    let attrId = list[index].keyId
    let proList = this.data.proList
    let cartProList = this.data.cartProList
    for (let i = 0; i < proList.length; i++) {
      if (proList.keyId === orgId) {
        let al = proList[i].attrList
        for (let j = 0; j < al.length; j++) {
          if (al[j].keyId === attrId) {
            al[j].cusBuyCount = al[j].cusBuyCount+1
          }
        }
      }
    }
    if (count===0) {
      count++
      list[index].cusChecked = true
      list[index].cusBuyCount=count
      cartProList.push(list[index])
    }else{
      list[index].cusBuyCount = count+1
      for (let i = 0; i < cartProList.length; i++) {
        if (cartProList[i].orgId === orgId && cartProList[i].attrId === attrId) {
          cartProList[i].cusBuyCount = cartProList[i].cusBuyCount+1
          cartProList[i].cusChecked=true
        }
      }
    }
    this.setData({
      proSpecList: list,
      proList: proList,
      cartProList: cartProList
    })
    let cplStr = JSON.stringify(cartProList)
    wx.setStorage({
      key: 'cartProList',
      data: cplStr,
    })
  },
  //bindSpecChoice选取某个商品规格数据
  bindSpecChoice(e){
    console.log(e)
    let index=parseInt(e.detail.value)
    let list=this.data.proSpecList
    let obj=list[index]
    let orgId=obj.orgId
    let cartList=this.data.cartProList
    
    cartList.push(obj)
    this.setData({
      cartProList: cartList
    })
  },
  //购物车全选
  cartCheckAll(e){

  },
  //购物车选择更改
  cartCheckboxChange(e){

  },
  //清空购物车
  bindClearCart(){

  },
  //关闭某个商品规格详情
  closeProSpec(){
    this.setData({
      proSpecShow: false
    })
  },
  //去订单提交界面bindToSubmit
  bindToSubmit(){
    wx.navigateTo({
      url: '/pages/mall/mall-suborder/order',
    })
  },
  //获取某个商家的分类列表/store/cate/showList
  getCateList(id){
    let data={
      orgId:id
    }
    let url = app.globalData.baseUrl + 'apiMall/store/cate/showList'
    util.getRequestListData(url,data, false, this.cateListRes)
  },
  cateListRes(res,type){
    let sliderList=res.data.content
    let tabList=JSON.parse(sliderList[0].nextList)
    this.setData({
      sliderList,
      tabList
    })
    let cateId=tabList[0].keyId
    let data = {
      orgId: this.data.orgId,
      cateId: cateId,
      goodsName: ''
    }
    let actType = 'refresh'
    this.getProInfoList(data,actType)
  },
  //获取某个商家商品列表///store/inst/goodsList
  //orgId,cateId,goodsName
  getProInfoList(data, actType){
    let url = app.globalData.baseUrl + 'apiMall/store/inst/goodsList'
    util.getRequestListData(url, data, actType, this.proInfoListRes)
    //getRequestListData = function (url, data,actType, callBack)
  },
  proInfoListRes(res, type) {
    let list=res.data.content
    let orgId = parseInt(this.data.orgId)
    list.forEach(item=>{
      item.orgId = orgId
      item.orgName=this.data.orgName
      let imgSrc = item.goodsPic
      let goodsId=item.keyId
      let attrList=JSON.parse(item.attrList)
      console.log(attrList)
      attrList.sort((a,b)=>{
        return a.attrPrice - b.attrPrice
      })
      attrList.forEach(item=>{
        item.cusBuyCount=0
        item.goodsPic = imgSrc
        item.orgId = orgId
        item.orgName=this.data.orgName
        item.goodsId=goodsId
        item.cusSalePrice = util.getMoney(item.attrPrice)
        item.cusOriPrice = util.getMoney(item.attrNormalPrice)
        item.cusChecked=false
      })
      item.attrList=attrList
      item.cusSalePrice = util.getMoney(attrList[0].attrPrice)
      item.cusOriPrice = util.getMoney( attrList[0].attrNormalPrice)
    })
    this.setData({
      proList:list
    })
  },
  
  handleScroll(){},
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let name=options.name
    let orgId=options.id
    this.setData({
      orgId: orgId,
      orgName:name
    })
    this.getCateList(orgId)
    //购物车信息
    let cartList = wx.getStorageSync('cartProList')
    if (!cartList){
      wx.setStorage({
        key: 'cartProList',
        data: '[]',
      })
    }else{
      let cartProList = JSON.parse(cartList)
      this.setData({
        cartProList: cartProList
      })
    }
    
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})