// pages/stock/stock-change/stock-change.js
var util = require('../../../../utils/util.js');
const app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    cateList: [],
    goodList: [],
    selectCate: -1,
    activeId: 0,
    pageSize: 10,
    pageNum: 1,
    secondCate: 0,
    multiIndex: [0, 0],
    multiArr: [],
    show: false,
    stockId: '',
    warnId: '',
    isSelect: true,
    top: '80%',
    height: 0,
    width: 0,
    radio: '1',
    ifStorage: false,
    ifStorehouse: false
  },
  goSelect: function (e) {
    var type = e.currentTarget.dataset.type
    if (type == 'storage') {
      this.setData({
        ifStorage: true,
        ifStorehouse: false
      })
    } else if (type == 'storehouse') {
      this.setData({
        ifStorage: false,
        ifStorehouse: true,
      })
    }
  },
  cancelSelect() {
    this.setData({
      ifStorage: false,
      ifStorehouse: false,
    })
  },
  onChange(event) {
    this.setData({
      radio: event.detail
    });
  },
  onClick(event) {
    const { name } = event.currentTarget.dataset;
    this.setData({
      radio: name
    });
  },
  bindMultiPickerChange: function (e) {
    this.setData({
      multiIndex: e.detail.value
    })
    var index = e.detail.value
    var that = this
    if (index[0] == 0) {
      this.setData({
        selectCate: -1
      })
    } else {
      this.setData({
        selectCate: that.data.cateList[index[0]].nextList[index[1]].keyId
      })
    }
    this.getGoodList()
  },
  bindMultiPickerColumnChange: function (e) {
    var data = {
      multiArr: this.data.multiArr,
      multiIndex: this.data.multiIndex
    };
    data.multiIndex[e.detail.column] = e.detail.value;
    if (e.detail.column == 0) {
      var nextArr = this.data.cateList[e.detail.value].nextList.map(item => {
        return item.cateName
      })
      var list = data.multiArr
      list.splice(1, 1)
      list.push(nextArr)
    }
    this.setData(data);

  },
  goSet(e) {
    var goodObj = this.data.goodList[e.currentTarget.dataset.index]
    this.setData({
      show: true,
      warnCount: goodObj.hasOwnProperty('warnCount') ? goodObj.warnCount : 0,
      warnId: goodObj.keyId,
      stockId: goodObj.locationId
    })
  },
  getWarnCount(e) {
    this.setData({
      warnCount: e.detail
    })
  },
  setWarnCount() {
    var url = app.globalData.baseUrl + 'apiStock/stock/inst/setWarn'
    var data = {
      // keyId: this.data.warnId,
      stockId: this.data.warnId,
      warnCount: this.data.warnCount
    }
    util.postRequestList(url, data, false, this.setRes)
  },
  setRes(res) {
    wx.showToast({
      title: res.data.message,
      duration: 2000
    })
    this.getGoodList()
  },
  changeCate: function (e) {
    this.setData({
      selectCate: e.detail.detail.value
    })
    // var id = this.data.cateList[this.data.selectCate].keyId
    this.getGoodList()
  },
  changeSecondCate: function (e) {
    this.setData({
      secondCate: e.detail.detail.value
    })
    // var id=this.data.cateList[this.data.selectCate].nextList[this.data.secondCate].keyId
    this.getGoodList()
  },
  getCateList() {
    var url = app.globalData.baseUrl + 'apiStock/stock/cate/list'
    util.getRequestList(url, false, this.cateListRes)
  },
  cateListRes(res) {
    var list = res.data.content
    for (var item of list) {
      item.nextList = JSON.parse(item.nextList)
    }
    list.unshift({
      keyId: -1,
      cateName: '全部',
      nextList: []
    })
    this.setData({
      cateList: list
    })
    var multiArr = this.data.cateList.map(item => {
      return item.cateName
    })
    var list = []
    list.push(multiArr)
    var nextArr = this.data.cateList[0].nextList.map(item => {
      return item.cateName
    })
    list.push(nextArr)
    this.setData({
      multiArr: list
    })
    this.getGoodList()
  },
  goAdd() {
    wx.navigateTo({
      url: '../stock-in/stock-in',
    })
  },
  goIn: function (e) {
    wx.navigateTo({
      url: '../stock-in/stock-in?id=' + e.currentTarget.dataset.id,
    })
  },
  goBuy() {
    wx.navigateTo({
      url: '/pages/purchase/order-manager/order-manager?status=1',
    })
  },
  goOut: function (e) {
    wx.navigateTo({
      url: '../stock-out/stock-out?id=' + e.currentTarget.dataset.id,
    })
  },
  goRecord: function (e) {
    wx.navigateTo({
      url: '../stock-record/stock-record?id=' + e.currentTarget.dataset.id,
    })
  },
  getGoodList: function () {
    var url = app.globalData.baseUrl + 'apiStock/stock/inst/list'
    var data = {
      cateId: this.data.selectCate,
      goodsName: ''
    }
    util.getRequestListData(url, data, false, this.goodListRes)
  },
  goodListRes(res) {
    if (res.data.code == 200) {
      var list = res.data.content
      for (var item of list) {
        var time = util.formatTime(item.lastTime)
        item.lastTime = time
      }
      this.setData({
        goodList: list
      })
    }
  },
  cateChange: function (e) {
    this.setData({
      selectCate: e.detail.value
    })
  },
  clickItem: function (e) {
    console.log(e)
    var itemHeight = e.detail.y
    if (itemHeight > this.data.height - 200) {
      console.log(itemHeight)
      console.log(this.data.height)
      this.setData({
        top: '-100%'
      })
    }
    this.setData({
      activeId: e.currentTarget.dataset.id
    })
  },
  closeActive: function () {
    this.setData({
      activeId: 0
    })
  },
  goInList(e) {
    wx.navigateTo({
      url: '../stock-inlist/stock-inlist?id=' + e.currentTarget.dataset.id,
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    if (options.cateId) {
      this.setData({
        selectCate: options.cateId,
        isSelect: false
      })
    }
    var that = this
    wx.getSystemInfo({
      success: function (res) {
        // console.log(res)
        that.setData({
          height: res.windowHeight,
          width: res.windowWidth,
        })
      },
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    this.getCateList()

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})